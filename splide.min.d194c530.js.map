{"version":3,"sources":["../../src/js/constants/media.ts","../../src/js/constants/states.ts","../../src/js/utils/array/empty/empty.ts","../../src/js/utils/arrayLike/slice/slice.ts","../../src/js/utils/function/apply/apply.ts","../../src/js/utils/function/noop/noop.ts","../../src/js/utils/function/nextTick/nextTick.ts","../../src/js/utils/function/raf/raf.ts","../../src/js/utils/type/type.ts","../../src/js/utils/array/toArray/toArray.ts","../../src/js/utils/array/forEach/forEach.ts","../../src/js/utils/array/includes/includes.ts","../../src/js/utils/array/push/push.ts","../../src/js/utils/dom/toggleClass/toggleClass.ts","../../src/js/utils/dom/addClass/addClass.ts","../../src/js/utils/dom/append/append.ts","../../src/js/utils/dom/before/before.ts","../../src/js/utils/dom/matches/matches.ts","../../src/js/utils/dom/children/children.ts","../../src/js/utils/dom/child/child.ts","../../src/js/utils/object/ownKeys/ownKeys.ts","../../src/js/utils/object/forOwn/forOwn.ts","../../src/js/utils/object/assign/assign.ts","../../src/js/utils/object/merge/merge.ts","../../src/js/utils/object/omit/omit.ts","../../src/js/utils/dom/removeAttribute/removeAttribute.ts","../../src/js/utils/dom/setAttribute/setAttribute.ts","../../src/js/utils/dom/create/create.ts","../../src/js/utils/dom/style/style.ts","../../src/js/utils/dom/display/display.ts","../../src/js/utils/dom/focus/focus.ts","../../src/js/utils/dom/getAttribute/getAttribute.ts","../../src/js/utils/dom/hasClass/hasClass.ts","../../src/js/utils/dom/rect/rect.ts","../../src/js/utils/dom/remove/remove.ts","../../src/js/utils/dom/parseHtml/parseHtml.ts","../../src/js/utils/dom/prevent/prevent.ts","../../src/js/utils/dom/query/query.ts","../../src/js/utils/dom/queryAll/queryAll.ts","../../src/js/utils/dom/removeClass/removeClass.ts","../../src/js/utils/dom/timeOf/timeOf.ts","../../src/js/utils/dom/unit/unit.ts","../../src/js/constants/project.ts","../../src/js/utils/error/assert/assert.ts","../../src/js/utils/math/math/math.ts","../../src/js/utils/math/approximatelyEqual/approximatelyEqual.ts","../../src/js/utils/math/between/between.ts","../../src/js/utils/math/clamp/clamp.ts","../../src/js/utils/math/sign/sign.ts","../../src/js/utils/string/format/format.ts","../../src/js/utils/string/pad/pad.ts","../../src/js/utils/string/uniqueId/uniqueId.ts","../../src/js/constructors/EventBinder/EventBinder.ts","../../src/js/constants/events.ts","../../src/js/constructors/EventInterface/EventInterface.ts","../../src/js/constructors/RequestInterval/RequestInterval.ts","../../src/js/constructors/State/State.ts","../../src/js/constants/arrows.ts","../../src/js/constants/directions.ts","../../src/js/components/Direction/Direction.ts","../../src/js/constants/attributes.ts","../../src/js/constants/classes.ts","../../src/js/components/Drag/constants.ts","../../src/js/constants/types.ts","../../src/js/components/Slides/Slide.ts","../../src/js/components/Autoplay/constants.ts","../../src/js/constants/listener-options.ts","../../src/js/utils/dom/normalizeKey/normalizeKey.ts","../../src/js/components/Keyboard/Keyboard.ts","../../src/js/components/LazyLoad/constants.ts","../../src/js/components/Sync/Sync.ts","../../src/js/components/Media/Media.ts","../../src/js/components/Elements/Elements.ts","../../src/js/utils/dom/closest/closest.ts","../../src/js/components/Slides/Slides.ts","../../src/js/components/Layout/Layout.ts","../../src/js/constructors/Throttle/Throttle.ts","../../src/js/components/Clones/Clones.ts","../../src/js/components/Move/Move.ts","../../src/js/components/Controller/Controller.ts","../../src/js/components/Arrows/Arrows.ts","../../src/js/components/Arrows/path.ts","../../src/js/components/Autoplay/Autoplay.ts","../../src/js/components/Cover/Cover.ts","../../src/js/components/Scroll/Scroll.ts","../../src/js/components/Scroll/constants.ts","../../src/js/components/Drag/Drag.ts","../../src/js/components/LazyLoad/LazyLoad.ts","../../src/js/components/Pagination/Pagination.ts","../../src/js/components/Wheel/Wheel.ts","../../src/js/components/Live/Live.ts","../../src/js/constants/defaults.ts","../../src/js/constants/i18n.ts","../../src/js/transitions/Fade/Fade.ts","../../src/js/transitions/Slide/Slide.ts","../../src/js/core/Splide/Splide.ts"],"names":["MEDIA_PREFERS_REDUCED_MOTION","MOVING","SCROLLING","STATES","CREATED","MOUNTED","IDLE","DRAGGING","DESTROYED","empty","array","length","slice","arrayLike","start","end","Array","prototype","call","apply","func","bind","arguments","noop","nextTick","setTimeout","raf","requestAnimationFrame","typeOf","type","subject","isObject","isNull","isArray","isFunction","isString","isUndefined","isHTMLElement","HTMLElement","toArray","value","forEach","values","iteratee","includes","indexOf","push","items","toggleClass","elm","classes","add","name","classList","addClass","split","append","parent","children","appendChild","before","nodes","ref","node","parentNode","insertBefore","matches","selector","children2","filter","child","firstElementChild","ownKeys","Object","keys","forOwn","object","right","reverse","i","key","assign","source","merge","omit","removeAttribute","elms","attrs","attr","setAttribute","value2","String","create","tag","document","createElement","style","prop","getComputedStyle","display","display2","focus","preventScroll","getAttribute","hasClass","className","contains","rect","target","getBoundingClientRect","remove","removeChild","parseHtml","html","DOMParser","parseFromString","body","prevent","e","stopPropagation","preventDefault","stopImmediatePropagation","query","querySelector","queryAll","querySelectorAll","removeClass","timeOf","timeStamp","unit","PROJECT_CODE","DATA_ATTRIBUTE","assert","condition","message","Error","min","Math","max","floor","ceil","abs","approximatelyEqual","x","y","epsilon","between","number","minOrMax","maxOrMin","exclusive","minimum","maximum","clamp","sign","format","string","replacements","replacement","replace","pad","ids","EventBinder","listeners","forEachEvent","targets","events","events2","eventNS","fragment","callback","options","event","namespace","isEventTarget","remover","removeEventListener","addEventListener","unbind","listener","dispatch","detail","CustomEvent","bubbles","createEvent","initCustomEvent","dispatchEvent","destroy","data","EVENT_MOUNTED","EVENT_MOVE","EVENT_MOVED","EVENT_SHIFTED","EVENT_CLICK","EVENT_ACTIVE","EVENT_INACTIVE","EVENT_VISIBLE","EVENT_HIDDEN","EVENT_SLIDE_KEYDOWN","EVENT_REFRESH","EVENT_UPDATED","EVENT_RESIZE","EVENT_RESIZED","EVENT_SCROLL","EVENT_SCROLLED","EVENT_DESTROY","EVENT_NAVIGATION_MOUNTED","EVENT_AUTOPLAY_PLAY","EVENT_AUTOPLAY_PAUSE","EVENT_LAZYLOAD_LOADED","EventInterface","Splide2","bus","createDocumentFragment","binder","on","join","off","emit","RequestInterval","interval","onInterval","onUpdate","limit","startTime","id","now","Date","rate","paused","count","update","pause","cancel","cancelAnimationFrame","resume","rewind","set","time","isPaused","State","initialState","state","is","states","ARROW","ARROW_LEFT","ARROW_RIGHT","ARROW_UP","ARROW_DOWN","TTB","ORIENTATION_MAP","width","left","X","Y","ArrowLeft","ArrowRight","ROLE","TAB_INDEX","ARIA_PREFIX","ARIA_CONTROLS","ARIA_CURRENT","ARIA_SELECTED","ARIA_LABEL","ARIA_LABELLEDBY","ARIA_HIDDEN","ARIA_ORIENTATION","ARIA_ROLEDESCRIPTION","ARIA_LIVE","ARIA_RELEVANT","ALL_ATTRIBUTES","CLASS_ROOT","CLASS_TRACK","CLASS_LIST","CLASS_SLIDE","CLASS_CLONE","CLASS_CONTAINER","CLASS_ARROWS","CLASS_ARROW","CLASS_ARROW_PREV","CLASS_ARROW_NEXT","CLASS_PAGINATION","CLASS_PAGINATION_PAGE","CLASS_PROGRESS_BAR","CLASS_TOGGLE","CLASS_SR","CLASS_ACTIVE","CLASS_PREV","CLASS_NEXT","CLASS_VISIBLE","CLASS_LOADING","CLASS_FOCUS_IN","STATUS_CLASSES","POINTER_DOWN_EVENTS","POINTER_MOVE_EVENTS","POINTER_UP_EVENTS","SLIDE","LOOP","FADE","Slide","index","slideIndex","slide","destroyed","Components","root","isNavigation","updateOnMove","i18n","pagination","slideFocus","resolve","Direction","styles","label","isClone","container","focusableNodes","initNavigation","controls","splides","map","Slide2","splide","Slides","getAt","slideX","onMove","curr","active","isActive","self","visible","trackRect","Elements","track","slideRect","isVisible","hidden","activeElement","updateVisibility","cloneStatus","mount","slideLabel","useContainer","_style","isWithin","from","distance","diff","INTERVAL_DATA_ATTRIBUTE","SCROLL_LISTENER_OPTIONS","passive","capture","NORMALIZATION_MAP","Spacebar","Right","Left","Up","Down","normalizeKey","KEYBOARD_EVENT","SRC_DATA_ATTRIBUTE","SRCSET_DATA_ATTRIBUTE","IMAGE_SELECTOR","TRIGGER_KEYS","Components2","breakpoints","reducedMotion","queries","completely","register","options2","queryList","matchMedia","direction","merged","reduce","merged2","entry","refresh","opts","user","getPrototypeOf","setup","isMin","mediaQuery","sort","n","m","enable","axisOnly","match","offset","toLowerCase","charAt","toUpperCase","orient","list","isUsingKey","elements","slides","rootClasses","trackClasses","find","arrows","prev","next","bar","toggle","prefix","uniqueId","role","tagName","carousel","init","concat","getClasses","labelledby","closest","nodeType","parentElement","base","drag","Slides2","get","excludeClones","matcher","Slide1","getIn","page","Controller","toIndex","hasFocus","perPage","forEachItem","images","img","removeNode","getLength","isEnough","vertical","rootRect","styleSlides","cssPadding","resize","newRect","height","cssHeight","cssTrackHeight","gap","autoWidth","fixedWidth","cssSlideSize","fixedHeight","autoHeight","padding","heightRatio","totalSize","withoutGap","getGap","parseFloat","duration","window","listSize","slideSize","sliderSize","getPadding","cloneCount","clones","computeCloneCount","isHead","clone","cloneNode","cloneDeep","generate","observe","fixedSize","clones2","Layout","Transition","reposition","isBusy","Scroll","jump","translate","toPosition","position","preventLoop","destination","exceededMin","exceededMax","getPosition","exceededLimit","shift","loop","backwards","excess","getLimit","size","trimming","trimSpace","trim","getEnd","move","dest","shifted","minDistance","Infinity","slideCount","perMove","Move","isLoop","isSlide","getNext","getAdjacent","getPrev","currIndex","prevIndex","computeDestIndex","snapPage","computeMovableDestIndex","toPage","setIndex","waitForTransition","go","control","allowSameIndex","indicator","parse","scroll","snap","getIndex","toDest","created","wrapperClasses","userArrows","wrapper","enabled","createArrow","remount","prev2","arrow","arrowPath","nextIndex","prevLabel","last","nextLabel","first","disabled","hovered","focused","autoplay","stopped","play","resetProgress","stop","autoToggle","pauseOnHover","pauseOnFocus","listen","cover","cover2","src","friction","onScrolled","noConstrain","clear","noDistance","onEnd","to","t","easingFunc","pow","basePosition","baseEvent","prevBaseEvent","isFree","dragging","clickPrevented","Media","exceeded","disable","onPointerDown","isTouch","target2","noDrag","isTouchEvent","button","onPointerMove","onPointerUp","save","thresholds","isObj","cancelable","diffCoord","expired","diffTime","hasExceeded","dragMinThreshold","mouse","touch","velocity","computeVelocity","flickPower","flickMaxPages","computeDestination","rewindByDrag","onClick","orthogonal","coordOf","getBaseEvent","changedTouches","TouchEvent","isDragging","keyboard","onKeydown","_disabled","isSequential","lazyLoad","entries","srcset","spinner","loadNext","preloadPages","load","onLoad","paginationClasses","dir","getDirection","nextPage","item","paginationDirection","select","li","class","text","pageX","paginationKeyboard","createPagination","isParent","sync","lastTime","onWheel","deltaY","sleep","wheelMinThreshold","wheelSleep","releaseWheel","wheel","live","sr","Autoplay","textContent","DEFAULTS","speed","easing","rewindSpeed","Fade","done","endCallback","transition","getSpeed","useScroll","Splide","_o","_E","_Splide","defaults","JSON","Extensions","this","_C","_T","ComponentConstructors","Component","component","_this","Sync"],"mappings":"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","file":"splide.min.d194c530.js","sourceRoot":"..","sourcesContent":["export const MEDIA_PREFERS_REDUCED_MOTION = '(prefers-reduced-motion: reduce)';","/**\r\n * Splide has been just created.\r\n */\r\nexport const CREATED = 1;\r\n\r\n/**\r\n * Splide has mounted components.\r\n */\r\nexport const MOUNTED = 2;\r\n\r\n/**\r\n * Splide is ready.\r\n */\r\nexport const IDLE = 3;\r\n\r\n/**\r\n * Splide is moving.\r\n */\r\nexport const MOVING = 4;\r\n\r\n/**\r\n * Splide is moving.\r\n */\r\nexport const SCROLLING = 5;\r\n\r\n/**\r\n * The user is dragging the slider.\r\n */\r\nexport const DRAGGING = 6;\r\n\r\n/**\r\n * Splide has been destroyed.\r\n */\r\nexport const DESTROYED = 7;\r\n\r\n/**\r\n * The collection of all states.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATES = {\r\n  CREATED,\r\n  MOUNTED,\r\n  IDLE,\r\n  MOVING,\r\n  SCROLLING,\r\n  DRAGGING,\r\n  DESTROYED,\r\n};\r\n","/**\r\n * Empties the array.\r\n *\r\n * @param array - A array to empty.\r\n */\r\nexport function empty( array: any[] ): void {\r\n  array.length = 0;\r\n}\r\n","/**\r\n * The slice method for an array-like object.\r\n *\r\n * @param arrayLike - An array-like object.\r\n * @param start     - Optional. A start index.\r\n * @param end       - Optional. A end index.\r\n *\r\n * @return An array with sliced elements.\r\n */\r\nexport function slice<T>( arrayLike: ArrayLike<T>, start?: number, end?: number ): T[] {\r\n  return Array.prototype.slice.call( arrayLike, start, end );\r\n}\r\n","import { AnyFunction, ShiftN } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Create a function where provided arguments are bound.\r\n * `this` parameter will be always null.\r\n *\r\n * @param func - A function.\r\n * @param args - Arguments to bind to the function.\r\n *\r\n * @return A function where arguments are bound.\r\n */\r\nexport function apply<F extends AnyFunction, A extends any[] = any[]>(\r\n  func: F,\r\n  ...args: A\r\n): ( ...args: ShiftN<Parameters<F>, A[\"length\"]> ) => ReturnType<F>;\r\n\r\n/**\r\n * Create a function where provided arguments are bound.\r\n * `this` parameter will be always null.\r\n *\r\n * @param func - A function.\r\n */\r\nexport function apply( func: AnyFunction ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  return func.bind( null, ...slice( arguments, 1 ) );\r\n}\r\n","/**\r\n * No operation.\r\n */\r\nexport const noop = (): void => {}; // eslint-disable-line no-empty-function, @typescript-eslint/no-empty-function\r\n","import { AnyFunction } from '../../../types';\r\n\r\n\r\n/**\r\n * Invokes the callback on the next tick.\r\n *\r\n * @param callback - A callback function.\r\n */\r\nexport const nextTick: ( callback: AnyFunction ) => ReturnType<typeof setTimeout> = setTimeout;\r\n","/**\r\n * The arias of `window.requestAnimationFrame()`.\r\n */\r\nexport function raf( func: FrameRequestCallback ): number {\r\n  return requestAnimationFrame( func );\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { apply } from '../function';\r\n\r\n\r\n/**\r\n * The alias of the type check function.\r\n *\r\n * @param type    - A type.\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is the specified type.\r\n */\r\nfunction typeOf( type: string, subject: unknown ): boolean {\r\n  return typeof subject === type;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an object or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an object, or otherwise `false`.\r\n */\r\nexport function isObject( subject: unknown ): subject is object {\r\n  return ! isNull( subject ) && typeOf( 'object', subject );\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an array or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an array, or otherwise `false`.\r\n */\r\nexport const isArray: <T>( subject: unknown ) => subject is T[] = Array.isArray;\r\n\r\n/**\r\n * Checks if the given subject is a function or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a function, or otherwise `false`.\r\n */\r\nexport const isFunction = <( subject: unknown ) => subject is AnyFunction>apply( typeOf, 'function' );\r\n\r\n/**\r\n * Checks if the given subject is a string or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is a string, or otherwise `false`.\r\n */\r\nexport const isString = <( subject: unknown ) => subject is string>apply( typeOf, 'string' );\r\n\r\n/**\r\n * Checks if the given subject is `undefined` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `undefined`, or otherwise `false`.\r\n */\r\nexport const isUndefined = <( subject: unknown ) => subject is undefined>apply( typeOf, 'undefined' );\r\n\r\n/**\r\n * Checks if the given subject is `null` or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is `null`, or otherwise `false`.\r\n */\r\nexport function isNull( subject: unknown ): subject is null {\r\n  return subject === null;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLElement instance, or otherwise `false`.\r\n */\r\nexport function isHTMLElement( subject: unknown ): subject is HTMLElement {\r\n  return subject instanceof HTMLElement;\r\n}\r\n\r\n/**\r\n * Checks if the given subject is an HTMLButtonElement or not.\r\n *\r\n * @param subject - A subject to check.\r\n *\r\n * @return `true` if the subject is an HTMLButtonElement, or otherwise `false`.\r\n */\r\nexport function isHTMLButtonElement( subject: unknown ): subject is HTMLButtonElement {\r\n  return subject instanceof HTMLButtonElement;\r\n}\r\n","import { isArray } from '../../type/type';\r\n\r\n\r\n/**\r\n * Push the provided value to an array if the value is not an array.\r\n *\r\n * @param value - A value to push.\r\n *\r\n * @return An array containing the value, or the value itself if it is already an array.\r\n */\r\nexport function toArray<T>( value: T | T[] ): T[] {\r\n  return isArray( value ) ? value : [ value ];\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * The extended `Array#forEach` method that accepts a single value as an argument.\r\n *\r\n * @param values   - A value or values to iterate over.\r\n * @param iteratee - An iteratee function.\r\n */\r\nexport function forEach<T>( values: T | T[], iteratee: ( value: T, index: number, array: T[] ) => void ): void {\r\n  toArray( values ).forEach( iteratee );\r\n}\r\n","/**\r\n * Checks if the array includes the value or not.\r\n * `Array#includes` is not supported by IE.\r\n *\r\n * @param array - An array.\r\n * @param value - A value to search for.\r\n *\r\n * @return `true` if the array includes the value, or otherwise `false`.\r\n */\r\nexport function includes<T>( array: T[], value: T ): boolean {\r\n  return array.indexOf( value ) > -1;\r\n}\r\n","import { toArray } from '../toArray/toArray';\r\n\r\n\r\n/**\r\n * Extended `Array#push()` that accepts an item or an array with items.\r\n *\r\n * @param array - An array to push items.\r\n * @param items - An item or items to push.\r\n *\r\n * @return A provided array itself.\r\n */\r\nexport function push<T>( array: T[], items: T | T[] ): T[] {\r\n  array.push( ...toArray( items ) );\r\n  return array;\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Toggles the provided class or classes by following the `add` boolean.\r\n *\r\n * @param elm     - An element whose classes are toggled.\r\n * @param classes - A class or class names.\r\n * @param add     - Whether to add or remove a class.\r\n */\r\nexport function toggleClass( elm: Element, classes: string | string[], add: boolean ): void {\r\n  if ( elm ) {\r\n    forEach( classes, name => {\r\n      if ( name ) {\r\n        elm.classList[ add ? 'add' : 'remove' ]( name );\r\n      }\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Adds classes to the element.\r\n *\r\n * @param elm     - An element to add classes to.\r\n * @param classes - Classes to add.\r\n */\r\nexport function addClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, isString( classes ) ? classes.split( ' ' ) : classes, true );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Appends children to the parent element.\r\n *\r\n * @param parent   - A parent element.\r\n * @param children - A child or children to append to the parent.\r\n */\r\nexport function append( parent: Element, children: Node | Node[] ): void {\r\n  forEach( children, parent.appendChild.bind( parent ) );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Inserts a node or nodes before the specified reference node.\r\n *\r\n * @param nodes - A node or nodes to insert.\r\n * @param ref   - A reference node.\r\n */\r\nexport function before( nodes: Node | Node[], ref: Node | null ): void {\r\n  forEach( nodes, node => {\r\n    const parent = ( ref || node ).parentNode;\r\n\r\n    if ( parent ) {\r\n      parent.insertBefore( node, ref );\r\n    }\r\n  } );\r\n}\r\n","import { isHTMLElement } from '../../type/type';\r\n\r\n\r\n/**\r\n * Checks if the element can be selected by the provided selector or not.\r\n *\r\n * @param elm      - An element to check.\r\n * @param selector - A selector to test.\r\n *\r\n * @return `true` if the selector matches the element, or otherwise `false`.\r\n */\r\nexport function matches( elm: Element | EventTarget, selector: string ): boolean {\r\n  return isHTMLElement( elm ) && ( elm[ 'msMatchesSelector' ] || elm.matches ).call( elm, selector );\r\n}\r\n","import { slice } from '../../arrayLike';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Finds children that has the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - Optional. A selector to filter children.\r\n *\r\n * @return An array with filtered children.\r\n */\r\nexport function children<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E[] {\r\n  const children = parent ? slice( parent.children ) as E[] : [];\r\n  return selector ? children.filter( child => matches( child, selector ) ) : children;\r\n}\r\n","import { children } from '../children/children';\r\n\r\n\r\n/**\r\n * Returns a child element that matches the specified tag or class name.\r\n *\r\n * @param parent   - A parent element.\r\n * @param selector - A selector to filter children.\r\n *\r\n * @return A matched child element if available, or otherwise `undefined`.\r\n */\r\nexport function child<E extends HTMLElement>( parent: HTMLElement, selector?: string ): E | undefined {\r\n  return selector ? children<E>( parent, selector )[ 0 ] : parent.firstElementChild as E;\r\n}\r\n","/**\r\n * An alias of Object.keys\r\n */\r\nexport const ownKeys = Object.keys;","import { ownKeys } from '../ownKeys/ownKeys';\r\n\r\n\r\n/**\r\n * Iterates over the provided object by own enumerable keys with calling the iteratee function.\r\n *\r\n * @param object   - An object to iterate over.\r\n * @param iteratee - An iteratee function that takes the value and key as arguments.\r\n * @param right    - If `true`, the method iterates over the object from the end like `forEachRight()`.\r\n *\r\n * @return A provided object itself.\r\n */\r\nexport function forOwn<T extends object>(\r\n  object: T,\r\n  iteratee: ( value: T[ keyof T ], key: string ) => boolean | void,\r\n  right?: boolean\r\n): T {\r\n  if ( object ) {\r\n    let keys = ownKeys( object );\r\n    keys = right ? keys.reverse() : keys;\r\n\r\n    for ( let i = 0; i < keys.length; i++ ) {\r\n      const key = keys[ i ];\r\n\r\n      if ( key !== '__proto__' ) {\r\n        if ( iteratee( object[ key ], key ) === false ) {\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return object;\r\n}\r\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Assigns U to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - An object to assign.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assign<T, U> = Omit<T, keyof U> & U;\r\n\r\n/**\r\n * Recursively assigns U[] to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - A tuple contains objects.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Assigned<T extends object, U extends object[], N extends number, C extends any[] = []> = {\r\n  0: T,\r\n  1: Assigned<Assign<T, Head<U>>, Shift<U>, N, Push<C>>,\r\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\r\n\r\nexport function assign<T extends object>( object: T ): T;\r\n\r\nexport function assign<T extends object, U extends object[]>(\r\n  object: T,\r\n  ...sources: U\r\n): Resolve<Assigned<T, U, U['length']>>\r\n\r\n/**\r\n * Assigns all own enumerable properties of all source objects to the provided object.\r\n * `undefined` in source objects will be skipped.\r\n *\r\n * @param object - An object to assign properties to.\r\n *\r\n * @return An object assigned properties of the sources to.\r\n */\r\nexport function assign<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      object[ key ] = source[ key ];\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { Cast, Head, Push, Resolve, Shift } from '../../../types';\r\nimport { slice } from '../../arrayLike';\r\nimport { isArray, isObject } from '../../type/type';\r\nimport { forOwn } from '../forOwn/forOwn';\r\n\r\n\r\n/**\r\n * Merges U to T.\r\n *\r\n * @typeParam T - An object to merge U into.\r\n * @typeParam U - An object to merge properties from.\r\n *\r\n * @return A merged object type.\r\n */\r\nexport type Merge<T extends object, U extends object> = Omit<T, keyof U> & {\r\n  [ K in ( keyof T & keyof U ) ]: U[ K ] extends object\r\n    ? U[ K ] extends any[]\r\n      ? U[ K ]\r\n      : T[ K ] extends object\r\n        ? Merge<T[ K ], U[ K ]> extends infer A ? Resolve<Cast<A, object>> : never\r\n        : U[ K ]\r\n    : U[ K ];\r\n} & Omit<U, keyof T>;\r\n\r\n/**\r\n * Recursively merges U[] to T.\r\n *\r\n * @typeParam T - An object to assign to.\r\n * @typeParam U - A tuple contains objects.\r\n *\r\n * @return An assigned object type.\r\n */\r\nexport type Merged<T extends object, U extends object[], N extends number, C extends any[] = []> = {\r\n  0: T,\r\n  1: Merged<Merge<T, Head<U>>, Shift<U>, N, Push<C>>,\r\n}[ C['length'] extends N ? 0 : 1 ] extends infer A ? Cast<A, any> : never;\r\n\r\nexport function merge<T extends object>( object: T ): T;\r\n\r\nexport function merge<T extends object, U extends object[]>(\r\n  object: T,\r\n  ...sources: U\r\n): Resolve<Merged<T, U, U['length']>>\r\n\r\n/**\r\n * Recursively merges source properties to the object.\r\n * Be aware that this method does not merge arrays. They are just duplicated by `slice()`.\r\n *\r\n * @param object - An object to merge properties to.\r\n *\r\n * @return A new object with merged properties.\r\n */\r\nexport function merge<T extends object>( object: T ): any {\r\n  // eslint-disable-next-line prefer-rest-params\r\n  slice( arguments, 1 ).forEach( source => {\r\n    forOwn( source, ( value, key ) => {\r\n      if ( isArray( value ) ) {\r\n        object[ key ] = value.slice();\r\n      } else if ( isObject( value ) ) {\r\n        object[ key ] = merge( {}, isObject( object[ key ] ) ? object[ key ] : {}, value );\r\n      } else {\r\n        object[ key ] = value;\r\n      }\r\n    } );\r\n  } );\r\n\r\n  return object;\r\n}\r\n","import { toArray } from '../../array';\r\nimport { ownKeys } from '../ownKeys/ownKeys';\r\n\r\n\r\n/**\r\n * Deletes specified own keys from the object.\r\n *\r\n * @param object - An object.\r\n * @param keys   - A key or keys to delete. If not specified, all own enumerable keys will be deleted.\r\n */\r\nexport function omit( object: object, keys?: string | string[] ): void {\r\n  toArray( keys || ownKeys( object ) ).forEach( key => {\r\n    delete object[ key ];\r\n  } );\r\n}","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes attributes from the element.\r\n *\r\n * @param elms  - An element or elements.\r\n * @param attrs - An attribute or attributes to remove.\r\n */\r\nexport function removeAttribute( elms: Element | Element[], attrs: string | string[] ): void {\r\n  forEach( elms, elm => {\r\n    forEach( attrs, attr => {\r\n      elm && elm.removeAttribute( attr );\r\n    } );\r\n  } );\r\n}\r\n","import { forEach } from '../../array';\r\nimport { forOwn } from '../../object';\r\nimport { isNull, isObject } from '../../type/type';\r\nimport { removeAttribute } from '../removeAttribute/removeAttribute';\r\n\r\n\r\nexport function setAttribute( elms: Element | Element[], attr: string, value: string | number | boolean ): void;\r\nexport function setAttribute( elms: Element | Element[], attrs: Record<string, string | number | boolean> ): void;\r\n\r\n/**\r\n * Sets attribute/attributes to the element or elements.\r\n * If the value is `null` or an empty string, the attribute will be removed.\r\n *\r\n * @param elms  - An element or an array with elements.\r\n * @param attrs - An attribute name of an object with pairs of a name and a value.\r\n * @param value - A value to set.\r\n */\r\nexport function setAttribute(\r\n  elms: Element | Element[],\r\n  attrs: string | Record<string, string | number | boolean>,\r\n  value?: string | number | boolean\r\n): void {\r\n  if ( isObject( attrs ) ) {\r\n    forOwn( attrs, ( value, name ) => {\r\n      setAttribute( elms, name, value );\r\n    } );\r\n  } else {\r\n    forEach( elms, elm => {\r\n      isNull( value ) || value === '' ? removeAttribute( elm, attrs ) : elm.setAttribute( attrs, String( value ) );\r\n    } );\r\n  }\r\n}\r\n","import { isString } from '../../type/type';\r\nimport { addClass } from '../addClass/addClass';\r\nimport { append } from '../append/append';\r\nimport { setAttribute } from '../setAttribute/setAttribute';\r\n\r\n\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ];\r\n\r\nexport function create(\r\n  tag: string,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElement;\r\n\r\n/**\r\n * Creates a HTML element.\r\n *\r\n * @param tag    - A tag name.\r\n * @param attrs  - Optional. An object with attributes to apply the created element to, or a string with classes.\r\n * @param parent - Optional. A parent element where the created element is appended.\r\n */\r\nexport function create<K extends keyof HTMLElementTagNameMap>(\r\n  tag: K,\r\n  attrs?: Record<string, string | number | boolean> | string,\r\n  parent?: HTMLElement\r\n): HTMLElementTagNameMap[ K ] {\r\n  const elm = document.createElement( tag );\r\n\r\n  if ( attrs ) {\r\n    isString( attrs ) ? addClass( elm, attrs ) : setAttribute( elm, attrs );\r\n  }\r\n\r\n  parent && append( parent, elm );\r\n\r\n  return elm;\r\n}\r\n","import { isNull, isUndefined } from '../../type/type';\r\n\r\n\r\nexport function style<K extends keyof CSSStyleDeclaration>(\r\n  elm: HTMLElement,\r\n  prop: K,\r\n): CSSStyleDeclaration[ K ];\r\n\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n): string;\r\n\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n  value: string | number\r\n): void;\r\n\r\n\r\n/**\r\n * Applies inline styles to the provided element by an object literal.\r\n *\r\n * @param elm   - An element to apply styles to.\r\n * @param prop  - An object literal with styles or a property name.\r\n * @param value - A value to set.\r\n */\r\nexport function style(\r\n  elm: HTMLElement,\r\n  prop: string,\r\n  value?: string | number\r\n): string | void {\r\n  if ( isUndefined( value ) ) {\r\n    return getComputedStyle( elm )[ prop ];\r\n  }\r\n\r\n  if ( ! isNull( value ) ) {\r\n    elm.style[ prop ] = `${ value }`;\r\n  }\r\n}\r\n","import { style } from '../style/style';\r\n\r\n\r\n/**\r\n * Sets the `display` CSS value to the element.\r\n *\r\n * @param elm     - An element to set a new value to.\r\n * @param display - A new `display` value.\r\n */\r\nexport function display( elm: HTMLElement, display: string ): void {\r\n  style( elm, 'display', display );\r\n}\r\n","/**\r\n * Focuses the provided element without scrolling the ascendant element.\r\n *\r\n * @param elm - An element to focus.\r\n */\r\nexport function focus( elm: HTMLElement ): void {\r\n  elm[ 'setActive' ] && elm[ 'setActive' ]() || elm.focus( { preventScroll: true } );\r\n}\r\n","/**\r\n * Returns the specified attribute value.\r\n *\r\n * @param elm  - An element.\r\n * @param attr - An attribute to get.\r\n */\r\nexport function getAttribute( elm: Element, attr: string ): string | null {\r\n  return elm.getAttribute( attr );\r\n}\r\n","/**\r\n * Checks if the element contains the specified class or not.\r\n *\r\n * @param elm       - An element to check.\r\n * @param className - A class name that may be contained by the element.\r\n *\r\n * @return `true` if the element contains the class, or otherwise `false`.\r\n */\r\nexport function hasClass( elm: Element, className: string ): boolean {\r\n  return elm && elm.classList.contains( className );\r\n}\r\n","/**\r\n * Returns a DOMRect object of the provided element.\r\n *\r\n * @param target - An element.\r\n */\r\nexport function rect( target: Element ): DOMRect {\r\n  return target.getBoundingClientRect();\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Removes the provided node from its parent.\r\n *\r\n * @param nodes - A node or nodes to remove.\r\n */\r\nexport function remove( nodes: Node | Node[] ): void {\r\n  forEach( nodes, node => {\r\n    if ( node && node.parentNode ) {\r\n      node.parentNode.removeChild( node );\r\n    }\r\n  } );\r\n}\r\n","import { child } from '../child/child';\r\n\r\n\r\n/**\r\n * Parses the provided HTML string and returns the first element.\r\n *\r\n * @param html - An HTML string to parse.\r\n *\r\n * @return An Element on success, or otherwise `undefined`.\r\n */\r\nexport function parseHtml<E extends HTMLElement>( html: string ): E | undefined {\r\n  return child<E>( new DOMParser().parseFromString( html, 'text/html' ).body );\r\n}\r\n","/**\r\n * Call the `preventDefault()` of the provided event.\r\n *\r\n * @param e               - An Event object.\r\n * @param stopPropagation - Optional. Whether to stop the event propagation or not.\r\n */\r\nexport function prevent( e: Event, stopPropagation?: boolean ): void {\r\n  e.preventDefault();\r\n\r\n  if ( stopPropagation ) {\r\n    e.stopPropagation();\r\n    e.stopImmediatePropagation();\r\n  }\r\n}\r\n","/**\r\n * Returns an element that matches the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return A found element or `null`.\r\n */\r\nexport function query<E extends Element = Element>( parent: Element | Document, selector: string ): E | null {\r\n  return parent && parent.querySelector( selector );\r\n}\r\n","import { slice } from '../../arrayLike';\r\n\r\n\r\n/**\r\n * Returns elements that match the provided selector.\r\n *\r\n * @param parent   - A parent element to start searching from.\r\n * @param selector - A selector to query.\r\n *\r\n * @return An array with matched elements.\r\n */\r\nexport function queryAll<E extends Element = Element>( parent: Element | Document, selector?: string ): E[] {\r\n  return selector ? slice<E>( parent.querySelectorAll( selector ) ) : [];\r\n}\r\n","import { toggleClass } from '../toggleClass/toggleClass';\r\n\r\n\r\n/**\r\n * Removes classes from the element.\r\n *\r\n * @param elm     - An element to remove classes from.\r\n * @param classes - Classes to remove.\r\n */\r\nexport function removeClass( elm: Element, classes: string | string[] ): void {\r\n  toggleClass( elm, classes, false );\r\n}\r\n","/**\r\n * Extracts the timestamp from the event object.\r\n *\r\n * @param e - An Event object.\r\n */\r\nexport function timeOf( e: Event ): number {\r\n  return e.timeStamp;\r\n}","import { isString } from '../../type/type';\r\n\r\n\r\n/**\r\n * Appends `px` to the provided number.\r\n * If the value is already string, just returns it.\r\n *\r\n * @param value - A value to append `px` to.\r\n *\r\n * @return A string with the CSS unit.\r\n */\r\nexport function unit( value: number | string ): string {\r\n  return isString( value ) ? value : value ? `${ value }px` : '';\r\n}\r\n","/**\r\n * The project code.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const PROJECT_CODE = 'splide';\r\n\r\n/**\r\n * The data attribute prefix.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DATA_ATTRIBUTE = `data-${ PROJECT_CODE }`;\r\n","import { PROJECT_CODE } from '../../../constants/project';\r\n\r\n\r\n/**\r\n * Throws an error if the provided condition is falsy.\r\n *\r\n * @param condition - If falsy, an error is thrown.\r\n * @param message   - Optional. A message to display.\r\n */\r\nexport function assert( condition: any, message?: string ): void {\r\n  if ( ! condition ) {\r\n    throw new Error( `[${ PROJECT_CODE }] ${ message || '' }` );\r\n  }\r\n}\r\n","export const { min, max, floor, ceil, abs } = Math;\r\n","import { abs } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the provided 2 numbers are approximately equal or not.\r\n *\r\n * @param x       - A number.\r\n * @param y       - Another number to compare.\r\n * @param epsilon - An accuracy that defines the approximation.\r\n *\r\n * @return `true` if 2 numbers are considered to be equal, or otherwise `false`.\r\n */\r\nexport function approximatelyEqual( x: number, y: number, epsilon: number ): boolean {\r\n  return abs( x - y ) < epsilon;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Checks if the subject number is between `minOrMax` and `maxOrMin`.\r\n *\r\n * @param number    - A subject number to check.\r\n * @param minOrMax  - A min or max number.\r\n * @param maxOrMin  - A max or min number.\r\n * @param exclusive - Optional. Whether to exclude `x` or `y`.\r\n */\r\nexport function between( number: number, minOrMax: number, maxOrMin: number, exclusive?: boolean ): boolean {\r\n  const minimum = min( minOrMax, maxOrMin );\r\n  const maximum = max( minOrMax, maxOrMin );\r\n  return exclusive ? minimum < number && number < maximum : minimum <= number && number <= maximum;\r\n}\r\n","import { max, min } from '../math/math';\r\n\r\n\r\n/**\r\n * Clamps a number.\r\n *\r\n * @param number - A subject number to check.\r\n * @param x      - A min or max number.\r\n * @param y      - A min or max number.\r\n */\r\nexport function clamp( number: number, x: number, y: number ): number {\r\n  const minimum = min( x, y );\r\n  const maximum = max( x, y );\r\n  return min( max( minimum, number ), maximum );\r\n}\r\n","/**\r\n * Returns the sign of the provided number.\r\n *\r\n * @param x - A number.\r\n *\r\n * @return `1` for positive numbers, `-1` for negative numbers, or `0` for `0`.\r\n */\r\nexport function sign( x: number ): number {\r\n  return +( x > 0 ) - +( x < 0 );\r\n}\r\n","import { forEach } from '../../array';\r\n\r\n\r\n/**\r\n * Formats a string.\r\n *\r\n * @param string       - A string to format.\r\n * @param replacements - A replacement or replacements.\r\n *\r\n * @return A formatted string.\r\n */\r\nexport function format( string: string, replacements: string | number | Array<string | number> ): string {\r\n  forEach( replacements, replacement => {\r\n    string = string.replace( '%s', `${ replacement }` );\r\n  } );\r\n\r\n  return string;\r\n}\r\n","/**\r\n * Pads the number with 0.\r\n *\r\n * @param number - A number to pad.\r\n *\r\n * @return string - Padded number.\r\n */\r\nexport function pad( number: number ): string {\r\n  return number < 10 ? `0${ number }` : `${ number }`;\r\n}\r\n","import { pad } from '../pad/pad';\r\n\r\n\r\n/**\r\n * Stores unique IDs.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst ids: Record<string, number> = {};\r\n\r\n/**\r\n * Returns a sequential unique ID as \"{ prefix }-{ number }\".\r\n *\r\n * @param prefix - A prefix for the ID.\r\n */\r\nexport function uniqueId( prefix: string ): string {\r\n  return `${ prefix }${ pad( ( ids[ prefix ] = ( ids[ prefix ] || 0 ) + 1 ) ) }`;\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { empty, forEach } from '../../utils';\r\n\r\n\r\n/**\r\n * The type for an EventTarget or an array with EventTarget objects.\r\n *\r\n * @since 4.0.0\r\n */\r\ntype EventTargets = EventTarget | EventTarget[];\r\n\r\n/**\r\n * The interface for the EventBinder object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface EventBinderObject {\r\n  bind( target: EventTargets, events: string | string[], callback: AnyFunction, options?: AddEventListenerOptions ): void\r\n  unbind( target: EventTarget | EventTarget[], events: string | string[], callback?: AnyFunction ): void;\r\n  dispatch<T>( target: EventTarget, event: string, detail?: T ): void;\r\n  destroy(): void;\r\n}\r\n\r\n/**\r\n * The constructor function to provide methods to subscribe native events.\r\n *\r\n * @since 4.0.0\r\n * @constructor\r\n *\r\n * @return An EventBinder object.\r\n */\r\nexport function EventBinder(): EventBinderObject {\r\n  /**\r\n   * Stores all handlers that listen to native events.\r\n   * `[ target, event, namespace, callback, remover ]`\r\n   */\r\n  let listeners: [ EventTarget, string, string | undefined, AnyFunction, () => void ][] = [];\r\n\r\n  /**\r\n   * Listens to native events.\r\n   * - `destroy()` can unsubscribe all events.\r\n   * - In IE, mediaQueryList does not inherit EventTarget,\r\n   *   and only supports deprecated `addListener` and `removeListener`.\r\n   *\r\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event or events to listen to.\r\n   * @param callback - A callback function.\r\n   * @param options  - Optional. The options to pass to the `addEventListener` function.\r\n   */\r\n  function bind(\r\n    targets: EventTargets,\r\n    events: string | string[],\r\n    callback: AnyFunction,\r\n    options?: AddEventListenerOptions\r\n  ): void {\r\n    forEachEvent( targets, events, ( target, event, namespace ) => {\r\n      const isEventTarget = 'addEventListener' in target;\r\n      const remover = isEventTarget\r\n        ? target.removeEventListener.bind( target, event, callback, options )\r\n        : target[ 'removeListener' ].bind( target, callback );\r\n\r\n      isEventTarget ? target.addEventListener( event, callback, options ) : target[ 'addListener' ]( callback );\r\n      listeners.push( [ target, event, namespace, callback, remover ] );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Removes the event handler.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event name or names to remove.\r\n   * @param callback - Optional. Specify the callback to remove.\r\n   */\r\n  function unbind( targets: EventTargets, events: string | string[], callback?: AnyFunction ): void {\r\n    forEachEvent( targets, events, ( target, event, namespace ) => {\r\n      listeners = listeners.filter( listener => {\r\n        if ( listener[ 0 ] === target\r\n          && listener[ 1 ] === event\r\n          && listener[ 2 ] === namespace\r\n          && ( ! callback || listener[ 3 ] === callback )\r\n        ) {\r\n          listener[ 4 ]();\r\n          return false;\r\n        }\r\n\r\n        return true;\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Dispatches a custom event of the target.\r\n   *\r\n   * @param target - An event target.\r\n   * @param type   - An event type.\r\n   * @param detail - Optional. The `detail` object of the event.\r\n   *\r\n   * @return An event object.\r\n   */\r\n  function dispatch<T>( target: EventTarget, type: string, detail?: T ): CustomEvent {\r\n    let e: CustomEvent;\r\n    const bubbles = true;\r\n\r\n    if ( typeof CustomEvent === 'function' ) {\r\n      e = new CustomEvent( type, { bubbles, detail } );\r\n    } else {\r\n      e = document.createEvent( 'CustomEvent' );\r\n      e.initCustomEvent( type, bubbles, false, detail );\r\n    }\r\n\r\n    target.dispatchEvent( e );\r\n    return e;\r\n  }\r\n\r\n  /**\r\n   * Iterates over each target and event.\r\n   *\r\n   * @param targets  - A target element, the window object or the document object.\r\n   * @param events   - An event name or names.\r\n   * @param iteratee - An iteratee function.\r\n   */\r\n  function forEachEvent(\r\n    targets: EventTargets,\r\n    events: string | string[],\r\n    iteratee: ( target: EventTarget, event: string, namespace: string | undefined ) => void\r\n  ): void {\r\n    forEach( targets, target => {\r\n      target && forEach( events, events => {\r\n        events.split( ' ' ).forEach( eventNS => {\r\n          const fragment = eventNS.split( '.' );\r\n          iteratee( target, fragment[ 0 ], fragment[ 1 ] );\r\n        } );\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Removes all listeners.\r\n   */\r\n  function destroy(): void {\r\n    listeners.forEach( data => { data[ 4 ]() } );\r\n    empty( listeners );\r\n  }\r\n\r\n  return {\r\n    bind,\r\n    unbind,\r\n    dispatch,\r\n    destroy,\r\n  };\r\n}\r\n","export const EVENT_MOUNTED            = 'mounted';\r\nexport const EVENT_READY              = 'ready';\r\nexport const EVENT_MOVE               = 'move';\r\nexport const EVENT_MOVED              = 'moved';\r\nexport const EVENT_SHIFTED            = 'shifted';\r\nexport const EVENT_CLICK              = 'click';\r\nexport const EVENT_ACTIVE             = 'active';\r\nexport const EVENT_INACTIVE           = 'inactive';\r\nexport const EVENT_VISIBLE            = 'visible';\r\nexport const EVENT_HIDDEN             = 'hidden';\r\nexport const EVENT_SLIDE_KEYDOWN      = 'slide:keydown';\r\nexport const EVENT_REFRESH            = 'refresh';\r\nexport const EVENT_UPDATED            = 'updated';\r\nexport const EVENT_RESIZE             = 'resize';\r\nexport const EVENT_RESIZED            = 'resized';\r\nexport const EVENT_DRAG               = 'drag';\r\nexport const EVENT_DRAGGING           = 'dragging';\r\nexport const EVENT_DRAGGED            = 'dragged';\r\nexport const EVENT_SCROLL             = 'scroll';\r\nexport const EVENT_SCROLLED           = 'scrolled';\r\nexport const EVENT_DESTROY            = 'destroy';\r\nexport const EVENT_ARROWS_MOUNTED     = 'arrows:mounted';\r\nexport const EVENT_ARROWS_UPDATED     = 'arrows:updated';\r\nexport const EVENT_PAGINATION_MOUNTED = 'pagination:mounted';\r\nexport const EVENT_PAGINATION_UPDATED = 'pagination:updated';\r\nexport const EVENT_NAVIGATION_MOUNTED = 'navigation:mounted';\r\nexport const EVENT_AUTOPLAY_PLAY      = 'autoplay:play';\r\nexport const EVENT_AUTOPLAY_PLAYING   = 'autoplay:playing';\r\nexport const EVENT_AUTOPLAY_PAUSE     = 'autoplay:pause';\r\nexport const EVENT_LAZYLOAD_LOADED    = 'lazyload:loaded';\r\n\r\n","import { EVENT_DESTROY } from '../../constants/events';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, EventMap } from '../../types';\r\nimport { apply, assign, isArray, slice, toArray } from '../../utils';\r\nimport { EventBinder, EventBinderObject } from '../EventBinder/EventBinder';\r\n\r\n\r\n/**\r\n * The interface for the EventInterface object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface EventInterfaceObject extends EventBinderObject {\r\n  on<K extends keyof EventMap>( event: K, callback: EventMap[ K ] ): void;\r\n  on( events: string | string[], callback: AnyFunction ): void;\r\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): void;\r\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): void\r\n  emit( event: string, ...args: any[] ): void;\r\n\r\n  /** @internal */\r\n  bus: DocumentFragment;\r\n}\r\n\r\n/**\r\n * The constructor function that provides interface for internal and native events.\r\n *\r\n * @since 3.0.0\r\n * @constructor\r\n *\r\n * @param Splide - A Splide instance.\r\n *\r\n * @return A collection of interface functions.\r\n */\r\nexport function EventInterface( Splide?: Splide ): EventInterfaceObject {\r\n  /**\r\n   * The document fragment for internal events.\r\n   * Provide the Splide instance to share the bus.\r\n   */\r\n  const bus = Splide ? Splide.event.bus : document.createDocumentFragment();\r\n\r\n  /**\r\n   * An event binder object.\r\n   */\r\n  const binder = EventBinder();\r\n\r\n  /**\r\n   * Listens to an internal event or events.\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to add a namespace.\r\n   * @param callback - A callback function to register.\r\n   */\r\n  function on( events: string | string[], callback: AnyFunction ): void {\r\n    binder.bind( bus, toArray( events ).join( ' ' ), e => {\r\n      callback.apply( callback, isArray( e.detail ) ? e.detail : [] );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Triggers callback functions.\r\n   * This accepts additional arguments and passes them to callbacks.\r\n   *\r\n   * @param event - An event name.\r\n   */\r\n  function emit( event: string ): void {\r\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n    binder.dispatch( bus, event, slice( arguments, 1 ) );\r\n  }\r\n\r\n  if ( Splide ) {\r\n    Splide.event.on( EVENT_DESTROY, binder.destroy );\r\n  }\r\n\r\n  return assign( binder, {\r\n    bus,\r\n    on,\r\n    off: apply( binder.unbind, bus ),\r\n    emit,\r\n  } );\r\n}","import { min, raf } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface RequestIntervalInterface {\r\n  start( resume?: boolean ): void;\r\n  pause(): void;\r\n  rewind(): void;\r\n  cancel(): void;\r\n  set( interval: number ): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * Requests interval like the native `setInterval()` with using `requestAnimationFrame`.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param interval   - The interval duration in milliseconds.\r\n * @param onInterval - The callback fired on every interval.\r\n * @param onUpdate   - Optional. Called on every animation frame, taking the progress rate.\r\n * @param limit      - Optional. Limits the number of interval.\r\n */\r\nexport function RequestInterval(\r\n  interval: number,\r\n  onInterval: () => void,\r\n  onUpdate?: ( rate: number ) => void,\r\n  limit?: number\r\n): RequestIntervalInterface {\r\n  const { now } = Date;\r\n\r\n  /**\r\n   * The time when the interval starts.\r\n   */\r\n  let startTime: number;\r\n\r\n  /**\r\n   * The current progress rate.\r\n   */\r\n  let rate = 0;\r\n\r\n  /**\r\n   * The animation frame ID.\r\n   */\r\n  let id: number;\r\n\r\n  /**\r\n   * Indicates whether the interval is currently paused or not.\r\n   */\r\n  let paused = true;\r\n\r\n  /**\r\n   * The loop count. This only works when the `limit` argument is provided.\r\n   */\r\n  let count = 0;\r\n\r\n  /**\r\n   * The update function called on every animation frame.\r\n   */\r\n  function update(): void {\r\n    if ( ! paused ) {\r\n      rate = interval ? min( ( now() - startTime ) / interval, 1 ) : 1;\r\n      onUpdate && onUpdate( rate );\r\n\r\n      if ( rate >= 1 ) {\r\n        onInterval();\r\n        startTime = now();\r\n\r\n        if ( limit && ++count >= limit ) {\r\n          return pause();\r\n        }\r\n      }\r\n\r\n      raf( update );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Starts the interval.\r\n   *\r\n   * @param resume - Optional. Whether to resume the paused progress or not.\r\n   */\r\n  function start( resume?: boolean ): void {\r\n    ! resume && cancel();\r\n    startTime = now() - ( resume ? rate * interval : 0 );\r\n    paused    = false;\r\n    raf( update );\r\n  }\r\n\r\n  /**\r\n   * Pauses the interval.\r\n   */\r\n  function pause(): void {\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Rewinds the current progress.\r\n   */\r\n  function rewind(): void {\r\n    startTime = now();\r\n    rate      = 0;\r\n\r\n    if ( onUpdate ) {\r\n      onUpdate( rate );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the interval.\r\n   */\r\n  function cancel() {\r\n    id && cancelAnimationFrame( id );\r\n    rate   = 0;\r\n    id     = 0;\r\n    paused = true;\r\n  }\r\n\r\n  /**\r\n   * Sets new interval duration.\r\n   *\r\n   * @param time - The interval duration in milliseconds.\r\n   */\r\n  function set( time: number ): void {\r\n    interval = time;\r\n  }\r\n\r\n  /**\r\n   * Checks if the interval is paused or not.\r\n   *\r\n   * @return `true` if the interval is paused, or otherwise `false`.\r\n   */\r\n  function isPaused(): boolean {\r\n    return paused;\r\n  }\r\n\r\n  return {\r\n    start,\r\n    rewind,\r\n    pause,\r\n    cancel,\r\n    set,\r\n    isPaused,\r\n  };\r\n}\r\n","import { includes, toArray } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the State object.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface StateObject {\r\n  set( state: number ): void;\r\n  is( states: number | number[] ): boolean;\r\n}\r\n\r\n/**\r\n * The function providing a super simple state system.\r\n *\r\n * @param initialState - Specifies the initial state.\r\n */\r\nexport function State( initialState: number ): StateObject {\r\n  /**\r\n   * The current state.\r\n   */\r\n  let state = initialState;\r\n\r\n  /**\r\n   * Sets a new state.\r\n   *\r\n   * @param value - A new state value.\r\n   */\r\n  function set( value: number ): void {\r\n    state = value;\r\n  }\r\n\r\n  /**\r\n   * Checks if the current state matches the provided one.\r\n   *\r\n   * @param states - A state to check.\r\n   *\r\n   * @return `true` if the current state is the provided one.\r\n   */\r\n  function is( states: number | number[] ): boolean {\r\n    return includes( toArray( states ), state );\r\n  }\r\n\r\n  return { set, is };\r\n}\r\n","const ARROW = 'Arrow';\r\nexport const ARROW_LEFT  = `${ ARROW }Left`;\r\nexport const ARROW_RIGHT = `${ ARROW }Right`;\r\nexport const ARROW_UP    = `${ ARROW }Up`;\r\nexport const ARROW_DOWN  = `${ ARROW }Down`;","/**\r\n * Enumerates slides from left to right.\r\n */\r\nexport const LTR = 'ltr';\r\n\r\n/**\r\n * Enumerates slides from right to left.\r\n */\r\nexport const RTL = 'rtl';\r\n\r\n/**\r\n * Enumerates slides in a col.\r\n */\r\nexport const TTB = 'ttb';\r\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../constants/arrows';\r\nimport { RTL, TTB } from '../../constants/directions';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\n\r\n\r\n/**\r\n * The interface for the Direction component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DirectionComponent extends BaseComponent {\r\n  resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string;\r\n  orient( value: number ): number;\r\n}\r\n\r\n/**\r\n * The translation map for directions.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ORIENTATION_MAP = {\r\n  width     : [ 'height' ],\r\n  left      : [ 'top', 'right' ],\r\n  right     : [ 'bottom', 'left' ],\r\n  x         : [ 'y' ],\r\n  X         : [ 'Y' ],\r\n  Y         : [ 'X' ],\r\n  ArrowLeft : [ ARROW_UP, ARROW_RIGHT ],\r\n  ArrowRight: [ ARROW_DOWN, ARROW_LEFT ],\r\n};\r\n\r\n/**\r\n * The component that absorbs the difference among directions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Direction component object.\r\n */\r\nexport function Direction( Splide: Splide, Components: Components, options: Options ): DirectionComponent {\r\n  /**\r\n   * Resolves the provided property name.\r\n   *\r\n   * @param prop      - A property name to translate.\r\n   * @param axisOnly  - Optional. If `ture`, returns the same property for LTR and RTL.\r\n   * @param direction - Optional. Specify the direction. The default value is the `direction` option.\r\n   */\r\n  function resolve( prop: string, axisOnly?: boolean, direction?: Options['direction'] ): string {\r\n    direction = direction || options.direction;\r\n    const index = direction === RTL && ! axisOnly ? 1 : direction === TTB ? 0 : -1;\r\n\r\n    return ORIENTATION_MAP[ prop ] && ORIENTATION_MAP[ prop ][ index ]\r\n      || prop.replace( /width|left|right/i, ( match, offset ) => {\r\n        const replacement = ORIENTATION_MAP[ match.toLowerCase() ][ index ] || match;\r\n        return offset > 0 ? replacement.charAt( 0 ).toUpperCase() + replacement.slice( 1 ) : replacement;\r\n      } );\r\n  }\r\n\r\n  /**\r\n   * Orients the value towards the current direction.\r\n   *\r\n   * @param value - A value to orient.\r\n   *\r\n   * @return The oriented value.\r\n   */\r\n  function orient( value: number ): number {\r\n    return value * ( options.direction === RTL ? 1 : -1 );\r\n  }\r\n\r\n  return {\r\n    resolve,\r\n    orient,\r\n  };\r\n}\r\n","export const ROLE      = 'role';\r\nexport const TAB_INDEX = 'tabindex';\r\nexport const DISABLED  = 'disabled';\r\n\r\nexport const ARIA_PREFIX          = 'aria-';\r\nexport const ARIA_CONTROLS        = `${ ARIA_PREFIX }controls`;\r\nexport const ARIA_CURRENT         = `${ ARIA_PREFIX }current`;\r\nexport const ARIA_SELECTED        = `${ ARIA_PREFIX }selected`;\r\nexport const ARIA_LABEL           = `${ ARIA_PREFIX }label`;\r\nexport const ARIA_LABELLEDBY      = `${ ARIA_PREFIX }labelledby`;\r\nexport const ARIA_HIDDEN          = `${ ARIA_PREFIX }hidden`;\r\nexport const ARIA_ORIENTATION     = `${ ARIA_PREFIX }orientation`;\r\nexport const ARIA_ROLEDESCRIPTION = `${ ARIA_PREFIX }roledescription`;\r\nexport const ARIA_LIVE            = `${ ARIA_PREFIX }live`;\r\nexport const ARIA_RELEVANT        = `${ ARIA_PREFIX }relevant`;\r\n\r\n/**\r\n * The array with all attributes to remove later.\r\n * Need to manually remove attributes that are not in this.\r\n * Note that removing aria-live disables the live region until the page reload.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const ALL_ATTRIBUTES = [\r\n  ROLE,\r\n  TAB_INDEX,\r\n  DISABLED,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_LABEL,\r\n  ARIA_LABELLEDBY,\r\n  ARIA_HIDDEN,\r\n  ARIA_ORIENTATION,\r\n  ARIA_ROLEDESCRIPTION,\r\n];\r\n","import { PROJECT_CODE } from './project';\r\n\r\n\r\nexport const CLASS_ROOT            = PROJECT_CODE;\r\nexport const CLASS_TRACK           = `${ PROJECT_CODE }__track`;\r\nexport const CLASS_LIST            = `${ PROJECT_CODE }__list`;\r\nexport const CLASS_SLIDE           = `${ PROJECT_CODE }__slide`;\r\nexport const CLASS_CLONE           = `${ CLASS_SLIDE }--clone`;\r\nexport const CLASS_CONTAINER       = `${ CLASS_SLIDE }__container`;\r\nexport const CLASS_ARROWS          = `${ PROJECT_CODE }__arrows`;\r\nexport const CLASS_ARROW           = `${ PROJECT_CODE }__arrow`;\r\nexport const CLASS_ARROW_PREV      = `${ CLASS_ARROW }--prev`;\r\nexport const CLASS_ARROW_NEXT      = `${ CLASS_ARROW }--next`;\r\nexport const CLASS_PAGINATION      = `${ PROJECT_CODE }__pagination`;\r\nexport const CLASS_PAGINATION_PAGE = `${ CLASS_PAGINATION }__page`;\r\nexport const CLASS_PROGRESS        = `${ PROJECT_CODE }__progress`;\r\nexport const CLASS_PROGRESS_BAR    = `${ CLASS_PROGRESS }__bar`;\r\nexport const CLASS_TOGGLE          = `${ PROJECT_CODE }__toggle`;\r\nexport const CLASS_TOGGLE_PLAY     = `${ CLASS_TOGGLE }__play`;\r\nexport const CLASS_TOGGLE_PAUSE    = `${ CLASS_TOGGLE }__pause`;\r\nexport const CLASS_SPINNER         = `${ PROJECT_CODE }__spinner`;\r\nexport const CLASS_SR              = `${ PROJECT_CODE }__sr`;\r\nexport const CLASS_INITIALIZED     = 'is-initialized';\r\nexport const CLASS_ACTIVE          = 'is-active';\r\nexport const CLASS_PREV            = 'is-prev';\r\nexport const CLASS_NEXT            = 'is-next';\r\nexport const CLASS_VISIBLE         = 'is-visible';\r\nexport const CLASS_LOADING         = 'is-loading';\r\nexport const CLASS_FOCUS_IN        = 'is-focus-in';\r\n\r\n\r\n/**\r\n * The array with all status classes.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const STATUS_CLASSES = [\r\n  CLASS_ACTIVE,\r\n  CLASS_VISIBLE,\r\n  CLASS_PREV,\r\n  CLASS_NEXT,\r\n  CLASS_LOADING,\r\n  CLASS_FOCUS_IN,\r\n];\r\n\r\n/**\r\n * The collection of classes for elements that Splide dynamically creates.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const CLASSES = {\r\n  slide     : CLASS_SLIDE,\r\n  clone     : CLASS_CLONE,\r\n  arrows    : CLASS_ARROWS,\r\n  arrow     : CLASS_ARROW,\r\n  prev      : CLASS_ARROW_PREV,\r\n  next      : CLASS_ARROW_NEXT,\r\n  pagination: CLASS_PAGINATION,\r\n  page      : CLASS_PAGINATION_PAGE,\r\n  spinner   : CLASS_SPINNER,\r\n};\r\n","/**\r\n * The power of the friction.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FRICTION = 5;\r\n\r\n/**\r\n * If the user stops dragging for this duration with keeping the pointer down, updates the base coord and time.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOG_INTERVAL = 200;\r\n\r\n/**\r\n * Start events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_DOWN_EVENTS = 'touchstart mousedown';\r\n\r\n/**\r\n * Update events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_MOVE_EVENTS = 'touchmove mousemove';\r\n\r\n/**\r\n * End events for dragging.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const POINTER_UP_EVENTS = 'touchend touchcancel mouseup';\r\n","/**\r\n * The type for the regular slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SLIDE = 'slide';\r\n\r\n/**\r\n * The type for the carousel slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const LOOP = 'loop';\r\n\r\n/**\r\n * The type for the fade slider that can not have multiple slides in a page.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FADE = 'fade';\r\n","import {\r\n  ALL_ATTRIBUTES,\r\n  ARIA_CONTROLS,\r\n  ARIA_CURRENT,\r\n  ARIA_HIDDEN,\r\n  ARIA_LABEL,\r\n  ARIA_ROLEDESCRIPTION,\r\n  ROLE,\r\n  TAB_INDEX,\r\n} from '../../constants/attributes';\r\nimport {\r\n  CLASS_ACTIVE,\r\n  CLASS_CONTAINER,\r\n  CLASS_NEXT,\r\n  CLASS_PREV,\r\n  CLASS_VISIBLE,\r\n  STATUS_CLASSES,\r\n} from '../../constants/classes';\r\nimport {\r\n  EVENT_ACTIVE,\r\n  EVENT_CLICK,\r\n  EVENT_HIDDEN,\r\n  EVENT_INACTIVE,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_NAVIGATION_MOUNTED,\r\n  EVENT_SCROLLED,\r\n  EVENT_SHIFTED,\r\n  EVENT_SLIDE_KEYDOWN,\r\n  EVENT_VISIBLE,\r\n} from '../../constants/events';\r\nimport { MOVING, SCROLLING } from '../../constants/states';\r\nimport { FADE, LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent } from '../../types';\r\nimport {\r\n  abs,\r\n  apply,\r\n  ceil,\r\n  child,\r\n  floor,\r\n  focus,\r\n  format,\r\n  getAttribute,\r\n  hasClass,\r\n  min,\r\n  pad,\r\n  queryAll,\r\n  rect,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  style as _style,\r\n  toggleClass,\r\n} from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Slide sub component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface  SlideComponent extends BaseComponent {\r\n  index: number;\r\n  slideIndex: number;\r\n  slide: HTMLElement;\r\n  container: HTMLElement;\r\n  isClone: boolean;\r\n  update(): void;\r\n  style( prop: string, value: string | number, useContainer?: boolean ): void\r\n  isWithin( from: number, distance: number ): boolean;\r\n}\r\n\r\n/**\r\n * The sub component for managing each slide.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param index      - A slide index.\r\n * @param slideIndex - A slide index for clones. This must be `-1` if the slide is not a clone.\r\n * @param slide      - A slide element.\r\n *\r\n * @return A Slide sub component.\r\n */\r\nexport function Slide( Splide: Splide, index: number, slideIndex: number, slide: HTMLElement ): SlideComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, emit, bind } = event;\r\n  const { Components, root, options } = Splide;\r\n  const { isNavigation, updateOnMove, i18n, pagination, slideFocus } = options;\r\n  const { resolve } = Components.Direction;\r\n  const styles         = getAttribute( slide, 'style' );\r\n  const label          = getAttribute( slide, ARIA_LABEL );\r\n  const isClone        = slideIndex > -1;\r\n  const container      = child( slide, `.${ CLASS_CONTAINER }` );\r\n  const focusableNodes = queryAll( slide, options.focusableNodes || '' );\r\n\r\n  /**\r\n   * Turns into `true` when the component is destroyed.\r\n   */\r\n  let destroyed: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount( this: SlideComponent ): void {\r\n    if ( ! isClone ) {\r\n      slide.id = `${ root.id }-slide${ pad( index + 1 ) }`;\r\n      setAttribute( slide, ROLE, pagination ? 'tabpanel' : 'group' );\r\n      setAttribute( slide, ARIA_ROLEDESCRIPTION, i18n.slide );\r\n      setAttribute( slide, ARIA_LABEL, label || format( i18n.slideLabel, [ index + 1, Splide.length ] ) );\r\n    }\r\n\r\n    listen();\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    bind( slide, 'click', apply( emit, EVENT_CLICK, self ) );\r\n    bind( slide, 'keydown', apply( emit, EVENT_SLIDE_KEYDOWN, self ) );\r\n    on( [ EVENT_MOVED, EVENT_SHIFTED, EVENT_SCROLLED ], update );\r\n    on( EVENT_NAVIGATION_MOUNTED, initNavigation );\r\n\r\n    if ( updateOnMove ) {\r\n      on( EVENT_MOVE, onMove );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    destroyed = true;\r\n    event.destroy();\r\n    removeClass( slide, STATUS_CLASSES );\r\n    removeAttribute( slide, ALL_ATTRIBUTES );\r\n    setAttribute( slide, 'style', styles );\r\n    setAttribute( slide, ARIA_LABEL, label || '' );\r\n  }\r\n\r\n  /**\r\n   * Initializes slides as navigation.\r\n   */\r\n  function initNavigation(): void {\r\n    const controls = Splide.splides.map( target => {\r\n      const Slide = target.splide.Components.Slides.getAt( index );\r\n      return Slide ? Slide.slide.id : '';\r\n    } ).join( ' ' );\r\n\r\n    setAttribute( slide, ARIA_LABEL, format( i18n.slideX, ( isClone ? slideIndex : index ) + 1 ) );\r\n    setAttribute( slide, ARIA_CONTROLS, controls );\r\n    setAttribute( slide, ROLE, slideFocus ? 'button' : '' );\r\n    slideFocus && removeAttribute( slide, ARIA_ROLEDESCRIPTION );\r\n  }\r\n\r\n  /**\r\n   * If the `updateOnMove` option is `true`, called when the slider starts moving.\r\n   */\r\n  function onMove(): void {\r\n    if ( ! destroyed ) {\r\n      update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates attribute and classes of the slide.\r\n   */\r\n  function update(): void {\r\n    if ( ! destroyed ) {\r\n      const { index: curr } = Splide;\r\n\r\n      updateActivity();\r\n      updateVisibility();\r\n      toggleClass( slide, CLASS_PREV, index === curr - 1 );\r\n      toggleClass( slide, CLASS_NEXT, index === curr + 1 );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the status related with activity.\r\n   */\r\n  function updateActivity(): void {\r\n    const active = isActive();\r\n\r\n    if ( active !== hasClass( slide, CLASS_ACTIVE ) ) {\r\n      toggleClass( slide, CLASS_ACTIVE, active );\r\n      setAttribute( slide, ARIA_CURRENT, isNavigation && active || '' );\r\n      emit( active ? EVENT_ACTIVE : EVENT_INACTIVE, self );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates classes and attributes related with visibility.\r\n   * - Do not update aria-hidden on shifting to avoid Window Narrator from start reading contents.\r\n   * - If the slide has focus and gets hidden, moves focus to the active slide.\r\n   */\r\n  function updateVisibility(): void {\r\n    const visible = isVisible();\r\n    const hidden = ! visible && ( ! isActive() || isClone );\r\n\r\n    if ( ! Splide.state.is( [ MOVING, SCROLLING ] ) ) {\r\n      setAttribute( slide, ARIA_HIDDEN, hidden || '' );\r\n    }\r\n\r\n    setAttribute( focusableNodes, TAB_INDEX, hidden ? -1 : '' );\r\n\r\n    if ( slideFocus ) {\r\n      setAttribute( slide, TAB_INDEX, hidden ? -1 : 0 );\r\n    }\r\n\r\n    if ( visible !== hasClass( slide, CLASS_VISIBLE ) ) {\r\n      toggleClass( slide, CLASS_VISIBLE, visible );\r\n      emit( visible ? EVENT_VISIBLE : EVENT_HIDDEN, self );\r\n    }\r\n\r\n    if ( ! visible && document.activeElement === slide ) {\r\n      const Slide = Components.Slides.getAt( Splide.index );\r\n      Slide && focus( Slide.slide );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS rule to the slider or the container.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\r\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\r\n    _style( ( useContainer && container ) || slide, prop, value );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is active or not.\r\n   *\r\n   * @return `true` if the slide is active.\r\n   */\r\n  function isActive(): boolean {\r\n    const { index: curr } = Splide;\r\n    return curr === index || ( options.cloneStatus && curr === slideIndex );\r\n  }\r\n\r\n  /**\r\n   * Checks if the slide is visible or not.\r\n   */\r\n  function isVisible(): boolean {\r\n    if ( Splide.is( FADE ) ) {\r\n      return isActive();\r\n    }\r\n\r\n    const trackRect = rect( Components.Elements.track );\r\n    const slideRect = rect( slide );\r\n    const left      = resolve( 'left' );\r\n    const right     = resolve( 'right' );\r\n\r\n    return floor( trackRect[ left ] ) <= ceil( slideRect[ left ] )\r\n      && floor( slideRect[ right ] ) <= ceil( trackRect[ right ] );\r\n  }\r\n\r\n  /**\r\n   * Calculates how far this slide is from another slide and\r\n   * returns `true` if the distance is within the given number.\r\n   *\r\n   * @param from     - An index of a base slide.\r\n   * @param distance - `true` if the slide is within this number.\r\n   *\r\n   * @return `true` if the slide is within the `distance` from the base slide, or otherwise `false`.\r\n   */\r\n  function isWithin( from: number, distance: number ): boolean {\r\n    let diff = abs( from - index );\r\n\r\n    if ( ! isClone && ( options.rewind || Splide.is( LOOP ) ) ) {\r\n      diff = min( diff, Splide.length - diff );\r\n    }\r\n\r\n    return diff <= distance;\r\n  }\r\n\r\n  const self = {\r\n    index,\r\n    slideIndex,\r\n    slide,\r\n    container,\r\n    isClone,\r\n    mount,\r\n    destroy,\r\n    update,\r\n    style,\r\n    isWithin,\r\n  };\r\n\r\n  return self;\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\n\r\n\r\n/**\r\n * The data attribute for the autoplay interval duration.\r\n *\r\n * @since 3.5.0\r\n */\r\nexport const INTERVAL_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-interval`;\r\n","/**\r\n * AddEventListenerOptions for listeners that may prevent the browser scroll.\r\n *\r\n * @since 3.4.1\r\n */\r\nexport const SCROLL_LISTENER_OPTIONS = { passive: false, capture: true };\r\n","import { ARROW_DOWN, ARROW_LEFT, ARROW_RIGHT, ARROW_UP } from '../../../constants/arrows';\r\nimport { isString } from '../../type/type';\r\n\r\n\r\n/**\r\n * The map to associate a non-standard name to the standard one.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport const NORMALIZATION_MAP = {\r\n  Spacebar: ' ',\r\n  Right   : ARROW_RIGHT,\r\n  Left    : ARROW_LEFT,\r\n  Up      : ARROW_UP,\r\n  Down    : ARROW_DOWN,\r\n};\r\n\r\n/**\r\n * Normalizes the key.\r\n *\r\n * @param key - A string or a KeyboardEvent object.\r\n *\r\n * @return A normalized key.\r\n */\r\nexport function normalizeKey( key: string | KeyboardEvent ): string {\r\n  key = isString( key ) ? key : key.key;\r\n  return NORMALIZATION_MAP[ key ] || key;\r\n}","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\r\nimport { EVENT_MOVE, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { nextTick } from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\n\r\n\r\n/**\r\n * The interface for the Keyboard component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface KeyboardComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * The keyboard event name.\r\n *\r\n * @since 3.6.0\r\n */\r\nconst KEYBOARD_EVENT = 'keydown';\r\n\r\n/**\r\n * The component for controlling the slider by keyboards.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Keyboard component object.\r\n */\r\nexport function Keyboard( Splide: Splide, Components: Components, options: Options ): KeyboardComponent {\r\n  const { on, bind, unbind } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * The target element of the keyboard event.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Indicates whether the component is currently disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, destroy );\r\n    on( EVENT_UPDATED, init );\r\n    on( EVENT_MOVE, onMove );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { keyboard } = options;\r\n\r\n    if ( keyboard ) {\r\n      target = keyboard === 'global' ? window : root;\r\n      bind( target, KEYBOARD_EVENT, onKeydown );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    unbind( target, KEYBOARD_EVENT );\r\n  }\r\n\r\n  /**\r\n   * Disables the keyboard input.\r\n   *\r\n   * @param value - Toggles disabling/enabling the keyboard input.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  /**\r\n   * Called when the slider moves.\r\n   * To avoid the slider from moving twice, wait for a tick.\r\n   */\r\n  function onMove(): void {\r\n    const _disabled = disabled;\r\n    disabled = true;\r\n    nextTick( () => { disabled = _disabled } );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the target.\r\n   *\r\n   * @param e - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( e: KeyboardEvent ): void {\r\n    if ( ! disabled ) {\r\n      const key = normalizeKey( e );\r\n\r\n      if ( key === resolve( ARROW_LEFT ) ) {\r\n        Splide.go( '<' );\r\n      } else if ( key === resolve( ARROW_RIGHT ) ) {\r\n        Splide.go( '>' );\r\n      }\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    disable,\r\n  };\r\n}\r\n","import { DATA_ATTRIBUTE } from '../../constants/project';\r\n\r\n\r\n/**\r\n * The data attribute for the src value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRC_DATA_ATTRIBUTE = `${ DATA_ATTRIBUTE }-lazy`;\r\n\r\n/**\r\n * The data attribute for the srcset value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const SRCSET_DATA_ATTRIBUTE = `${ SRC_DATA_ATTRIBUTE }-srcset`;\r\n\r\n/**\r\n * The selector string for images to load.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const IMAGE_SELECTOR = `[${ SRC_DATA_ATTRIBUTE }], [${ SRCSET_DATA_ATTRIBUTE }]`;\r\n","import { ARIA_ORIENTATION } from '../../constants/attributes';\r\nimport { TTB } from '../../constants/directions';\r\nimport {\r\n  EVENT_CLICK,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVE,\r\n  EVENT_NAVIGATION_MOUNTED,\r\n  EVENT_SLIDE_KEYDOWN,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { LOOP } from '../../constants/types';\r\nimport { EventInterface, EventInterfaceObject } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { empty, includes, isUndefined, prevent, setAttribute } from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\nimport { SlideComponent } from '../Slides/Slide';\r\n\r\n\r\n/**\r\n * The interface for the Sync component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface SyncComponent extends BaseComponent {\r\n  remount(): void;\r\n}\r\n\r\n/**\r\n * The keys for triggering the navigation slide.\r\n *\r\n * @since 3.0.0\r\n */\r\nconst TRIGGER_KEYS = [ ' ', 'Enter' ];\r\n\r\n/**\r\n * The component for syncing multiple sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Sync component object.\r\n */\r\nexport function Sync( Splide: Splide, Components: Components, options: Options ): SyncComponent {\r\n  const { isNavigation, slideFocus } = options;\r\n\r\n  /**\r\n   * Stores event objects.\r\n   */\r\n  const events: EventInterfaceObject[] = [];\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    Splide.options = { slideFocus: isUndefined( slideFocus ) ? isNavigation : slideFocus };\r\n  }\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    Splide.splides.forEach( target => {\r\n      if ( ! target.isParent ) {\r\n        sync( Splide, target.splide );\r\n        sync( target.splide, Splide );\r\n      }\r\n    } );\r\n\r\n    if ( isNavigation ) {\r\n      navigate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    events.forEach( event => { event.destroy() } );\r\n    empty( events );\r\n  }\r\n\r\n  /**\r\n   * Remounts the component.\r\n   *\r\n   * @internal\r\n   */\r\n  function remount(): void {\r\n    destroy();\r\n    mount();\r\n  }\r\n\r\n  /**\r\n   * Syncs the current index with a provided child splide instance.\r\n   *\r\n   * @param splide - A splide instance to sync with.\r\n   * @param target - A target splide instance.\r\n   */\r\n  function sync( splide: Splide, target: Splide ): void {\r\n    const event = EventInterface( splide );\r\n\r\n    event.on( EVENT_MOVE, ( index, prev, dest ) => {\r\n      target.go( target.is( LOOP ) ? dest : index );\r\n    } );\r\n\r\n    events.push( event );\r\n  }\r\n\r\n  /**\r\n   * Makes slides clickable and moves the slider to the index of clicked slide.\r\n   * Note that the direction of `menu` is implicitly `vertical` as default.\r\n   */\r\n  function navigate(): void {\r\n    const event = EventInterface( Splide );\r\n    const { on } = event;\r\n\r\n    on( EVENT_CLICK, onClick );\r\n    on( EVENT_SLIDE_KEYDOWN, onKeydown );\r\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], update );\r\n\r\n    events.push( event );\r\n    event.emit( EVENT_NAVIGATION_MOUNTED, Splide.splides );\r\n  }\r\n\r\n  /**\r\n   * Update attributes.\r\n   */\r\n  function update(): void {\r\n    setAttribute( Components.Elements.list, ARIA_ORIENTATION, options.direction === TTB ? 'vertical' : '' );\r\n  }\r\n\r\n  /**\r\n   * Called when the navigation slide is clicked.\r\n   *\r\n   * @param Slide - A clicked Slide component.\r\n   */\r\n  function onClick( Slide: SlideComponent ): void {\r\n    Splide.go( Slide.index );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the navigation slide.\r\n   *\r\n   * @param Slide - A Slide component.\r\n   * @param e     - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( Slide: SlideComponent, e: KeyboardEvent ): void {\r\n    if ( includes( TRIGGER_KEYS, normalizeKey( e ) ) ) {\r\n      onClick( Slide );\r\n      prevent( e );\r\n    }\r\n  }\r\n\r\n  return {\r\n    setup,\r\n    mount,\r\n    destroy,\r\n    remount,\r\n  };\r\n}\r\n","import { MEDIA_PREFERS_REDUCED_MOTION } from '../../constants/media';\r\nimport { CREATED, DESTROYED } from '../../constants/states';\r\nimport { EventBinder } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { merge, omit, ownKeys } from '../../utils';\r\nimport { EVENT_UPDATED } from \"../../constants/events\";\r\n\r\n\r\n/**\r\n * The interface for the Media component.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport interface MediaComponent extends BaseComponent {\r\n  /** @internal */\r\n  reduce( reduced: boolean ): void;\r\n  set( options: Options, userOptions?: boolean ): void;\r\n}\r\n\r\n/**\r\n * The component for observing media queries and updating options if necessary.\r\n * This used to be the Options component.\r\n *\r\n * @since 4.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Media component object.\r\n */\r\nexport function Media( Splide: Splide, Components: Components, options: Options ): MediaComponent {\r\n  const { state } = Splide;\r\n  const breakpoints   = options.breakpoints || {};\r\n  const reducedMotion = options.reducedMotion || {};\r\n  const binder        = EventBinder();\r\n\r\n  /**\r\n   * Stores options and MediaQueryList object.\r\n   */\r\n  const queries: Array<[ Options, MediaQueryList ]> = [];\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    const isMin = options.mediaQuery === 'min';\r\n\r\n    ownKeys( breakpoints )\r\n      .sort( ( n, m ) => isMin ? +n - +m : +m - +n )\r\n      .forEach( key => {\r\n        register( breakpoints[ key ], `(${ isMin ? 'min' : 'max' }-width:${ key }px)` );\r\n      } );\r\n\r\n    register( reducedMotion, MEDIA_PREFERS_REDUCED_MOTION );\r\n    update();\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Will be `true` for complete destruction.\r\n   */\r\n  function destroy( completely: boolean ): void {\r\n    if ( completely ) {\r\n      binder.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers entries as [ Options, media query string ].\r\n   *\r\n   * @param options - Options merged to current options when the document matches the query.\r\n   * @param query   - A query string.\r\n   */\r\n  function register( options: Options, query: string ): void {\r\n    const queryList = matchMedia( query );\r\n    binder.bind( queryList, 'change', update );\r\n    queries.push( [ options, queryList ] );\r\n  }\r\n\r\n  /**\r\n   * Checks all media queries in entries and updates options.\r\n   */\r\n  function update(): void {\r\n    const destroyed = state.is( DESTROYED );\r\n    const direction = options.direction;\r\n    const merged = queries.reduce<Options>( ( merged, entry ) => {\r\n      return merge( merged, entry[ 1 ].matches ? entry[ 0 ] : {} );\r\n    }, {} );\r\n\r\n    omit( options );\r\n    set( merged );\r\n\r\n    if ( options.destroy ) {\r\n      Splide.destroy( options.destroy === 'completely' );\r\n    } else if ( destroyed ) {\r\n      destroy( true );\r\n      Splide.mount();\r\n    } else {\r\n      direction !== options.direction && Splide.refresh();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disables or enables `reducedMotion` options.\r\n   * This method does nothing when the document does not match the query.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param enable - Determines whether to apply `reducedMotion` options or not.\r\n   */\r\n  function reduce( enable: boolean ): void {\r\n    if ( matchMedia( MEDIA_PREFERS_REDUCED_MOTION ).matches ) {\r\n      enable ? merge( options, reducedMotion ) : omit( options, ownKeys( reducedMotion ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets options.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param opts - New options.\r\n   * @param user - Optional. Determines whether to also update user options or not.\r\n   */\r\n  function set( opts: Options, user?: boolean ): void {\r\n    merge( options, opts );\r\n    user && merge( Object.getPrototypeOf( options ), opts );\r\n\r\n    if ( ! state.is( CREATED ) ) {\r\n      Splide.emit( EVENT_UPDATED, options );\r\n    }\r\n  }\r\n\r\n  return {\r\n    setup,\r\n    destroy,\r\n    reduce,\r\n    set,\r\n  };\r\n}\r\n","import { ALL_ATTRIBUTES, ARIA_LABEL, ARIA_LABELLEDBY, ARIA_ROLEDESCRIPTION, ROLE } from '../../constants/attributes';\r\nimport {\r\n  CLASS_ACTIVE,\r\n  CLASS_ARROW_NEXT,\r\n  CLASS_ARROW_PREV,\r\n  CLASS_ARROWS,\r\n  CLASS_CLONE,\r\n  CLASS_FOCUS_IN,\r\n  CLASS_LIST,\r\n  CLASS_PAGINATION,\r\n  CLASS_PROGRESS_BAR,\r\n  CLASS_ROOT,\r\n  CLASS_SLIDE,\r\n  CLASS_TOGGLE,\r\n  CLASS_TRACK,\r\n} from '../../constants/classes';\r\nimport { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { PROJECT_CODE } from '../../constants/project';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  assert,\r\n  assign,\r\n  child,\r\n  children,\r\n  empty,\r\n  forOwn,\r\n  getAttribute,\r\n  push,\r\n  query,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  toggleClass,\r\n  uniqueId,\r\n} from '../../utils';\r\nimport { closest } from '../../utils/dom/closest/closest';\r\nimport { POINTER_DOWN_EVENTS } from '../Drag/constants';\r\n\r\n\r\n/**\r\n * The interface for elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementCollection {\r\n  root: HTMLElement;\r\n  track: HTMLElement;\r\n  list: HTMLElement;\r\n  slides: HTMLElement[];\r\n  arrows?: HTMLElement;\r\n  pagination?: HTMLUListElement;\r\n  prev?: HTMLButtonElement;\r\n  next?: HTMLButtonElement;\r\n  bar?: HTMLElement;\r\n  toggle?: HTMLElement;\r\n}\r\n\r\n/**\r\n * The interface for the Elements component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ElementsComponent extends BaseComponent, ElementCollection {\r\n}\r\n\r\n/**\r\n * The component that collects and handles elements which the slider consists of.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Elements component object.\r\n */\r\nexport function Elements( Splide: Splide, Components: Components, options: Options ): ElementsComponent {\r\n  const { on, bind } = EventInterface( Splide );\r\n  const { root } = Splide;\r\n  const { i18n } = options;\r\n  const elements: ElementCollection = {} as ElementCollection;\r\n\r\n  /**\r\n   * Stores all slide elements.\r\n   */\r\n  const slides: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Stores all root classes.\r\n   */\r\n  let rootClasses: string[] = [];\r\n\r\n  /**\r\n   * Stores all list classes.\r\n   */\r\n  let trackClasses: string[] = [];\r\n\r\n  /**\r\n   * The track element.\r\n   */\r\n  let track: HTMLElement;\r\n\r\n  /**\r\n   * The list element.\r\n   */\r\n  let list: HTMLElement;\r\n\r\n  /**\r\n   * Turns into `true` when detecting keydown, and `false` when detecting pointerdown.\r\n   */\r\n  let isUsingKey: boolean;\r\n\r\n  /**\r\n   * Called when the component is constructed.\r\n   */\r\n  function setup(): void {\r\n    collect();\r\n    init();\r\n    update();\r\n  }\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, setup );\r\n    on( EVENT_UPDATED, update );\r\n\r\n    bind( document, `${ POINTER_DOWN_EVENTS } keydown`, e => {\r\n      isUsingKey = e.type === 'keydown';\r\n    }, { capture: true } );\r\n\r\n    bind( root, 'focusin', () => {\r\n      toggleClass( root, CLASS_FOCUS_IN, !! isUsingKey );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   *\r\n   * @param completely - Whether to destroy the component completely or not.\r\n   */\r\n  function destroy( completely?: boolean ): void {\r\n    const attrs = ALL_ATTRIBUTES.concat( 'style' );\r\n\r\n    empty( slides );\r\n    removeClass( root, rootClasses );\r\n    removeClass( track, trackClasses );\r\n    removeAttribute( [ track, list ], attrs );\r\n    removeAttribute( root, completely ? attrs : [ 'style', ARIA_ROLEDESCRIPTION ] );\r\n  }\r\n\r\n  /**\r\n   * Updates the status of elements.\r\n   */\r\n  function update(): void {\r\n    removeClass( root, rootClasses );\r\n    removeClass( track, trackClasses );\r\n\r\n    rootClasses  = getClasses( CLASS_ROOT );\r\n    trackClasses = getClasses( CLASS_TRACK );\r\n\r\n    addClass( root, rootClasses );\r\n    addClass( track, trackClasses );\r\n\r\n    setAttribute( root, ARIA_LABEL, options.label );\r\n    setAttribute( root, ARIA_LABELLEDBY, options.labelledby );\r\n  }\r\n\r\n  /**\r\n   * Collects elements which the slider consists of.\r\n   */\r\n  function collect(): void {\r\n    track = find( `.${ CLASS_TRACK }` );\r\n    list  = child( track, `.${ CLASS_LIST }` );\r\n\r\n    assert( track && list, 'A track/list element is missing.' );\r\n    push( slides, children( list, `.${ CLASS_SLIDE }:not(.${ CLASS_CLONE })` ) );\r\n\r\n    forOwn( {\r\n      arrows    : CLASS_ARROWS,\r\n      pagination: CLASS_PAGINATION,\r\n      prev      : CLASS_ARROW_PREV,\r\n      next      : CLASS_ARROW_NEXT,\r\n      bar       : CLASS_PROGRESS_BAR,\r\n      toggle    : CLASS_TOGGLE,\r\n    }, ( className, key ) => {\r\n      elements[ key ] = find( `.${ className }` );\r\n    } );\r\n\r\n    assign( elements, { root, track, list, slides } );\r\n  }\r\n\r\n  /**\r\n   * Initializes essential elements.\r\n   * Note that do not change the role of the root element,\r\n   * which removes the region from the accessibility tree.\r\n   */\r\n  function init(): void {\r\n    const id   = root.id || uniqueId( PROJECT_CODE );\r\n    const role = options.role;\r\n\r\n    root.id  = id;\r\n    track.id = track.id || `${ id }-track`;\r\n    list.id  = list.id || `${ id }-list`;\r\n\r\n    if ( ! getAttribute( root, ROLE ) && root.tagName !== 'SECTION' && role ) {\r\n      setAttribute( root, ROLE, role );\r\n    }\r\n\r\n    setAttribute( root, ARIA_ROLEDESCRIPTION, i18n.carousel );\r\n    setAttribute( list, ROLE, 'presentation' );\r\n  }\r\n\r\n  /**\r\n   * Finds an element only in this slider, ignoring elements in a nested slider.\r\n   *\r\n   * @return A found element or null.\r\n   */\r\n  function find( selector: string ): HTMLElement | undefined {\r\n    const elm = query<HTMLElement>( root, selector );\r\n    return elm && closest( elm, `.${ CLASS_ROOT }` ) === root ? elm : undefined;\r\n  }\r\n\r\n  /**\r\n   * Return an array with modifier classes.\r\n   *\r\n   * @param base - A base class name.\r\n   *\r\n   * @return An array with classes.\r\n   */\r\n  function getClasses( base: string ): string[] {\r\n    return [\r\n      `${ base }--${ options.type }`,\r\n      `${ base }--${ options.direction }`,\r\n      options.drag && `${ base }--draggable`,\r\n      options.isNavigation && `${ base }--nav`,\r\n      base === CLASS_ROOT && CLASS_ACTIVE,\r\n    ];\r\n  }\r\n\r\n  return assign( elements, {\r\n    setup,\r\n    mount,\r\n    destroy,\r\n  } );\r\n}\r\n","import { isFunction } from '../../type/type';\r\nimport { matches } from '../matches/matches';\r\n\r\n\r\n/**\r\n * Starts from the provided element, searches for the first element that matches the selector in ascendants.\r\n *\r\n * @param from     - An element to search from.\r\n * @param selector - A selector.\r\n *\r\n * @return The found element if available, or `null`.\r\n */\r\nexport function closest( from: HTMLElement, selector: string ): HTMLElement | null {\r\n  if ( isFunction( from.closest ) ) {\r\n    return from.closest( selector );\r\n  }\r\n\r\n  let elm: HTMLElement | null = from;\r\n\r\n  while ( elm && elm.nodeType === 1 ) {\r\n    if ( matches( elm, selector ) ) {\r\n      break;\r\n    }\r\n\r\n    elm = elm.parentElement;\r\n  }\r\n\r\n  return elm;\r\n}","import { EVENT_MOUNTED, EVENT_REFRESH, EVENT_RESIZE } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  append, apply,\r\n  before,\r\n  between,\r\n  empty,\r\n  forEach as forEachItem,\r\n  includes,\r\n  isFunction,\r\n  isHTMLElement,\r\n  isString,\r\n  matches,\r\n  parseHtml,\r\n  queryAll,\r\n  remove as removeNode,\r\n  toArray,\r\n} from '../../utils';\r\nimport { Slide, SlideComponent } from './Slide';\r\n\r\n\r\n/**\r\n * The interface for the Slides component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface  SlidesComponent extends BaseComponent {\r\n  update(): void;\r\n  register( slide: HTMLElement, index: number, slideIndex: number ): void;\r\n  get( excludeClones?: boolean ): SlideComponent[];\r\n  getIn( page: number ): SlideComponent[];\r\n  getAt( index: number ): SlideComponent | undefined;\r\n  add( slide: string | Element | Array<string | Element>, index?: number ): void;\r\n  remove( selector: SlideMatcher ): void;\r\n  forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void;\r\n  filter( matcher: SlideMatcher ): SlideComponent[];\r\n  style( prop: string, value: string | number, useContainer?: boolean ): void\r\n  getLength( excludeClones?: boolean ): number;\r\n  isEnough(): boolean;\r\n}\r\n\r\n/**\r\n * The iteratee function for Slides.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlidesIteratee = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => void\r\n\r\n/**\r\n * The predicate function for Slides.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlidesPredicate = ( Slide: SlideComponent, index: number, Slides: SlideComponent[] ) => any\r\n\r\n/**\r\n * The type for filtering SlideComponent objects.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport type SlideMatcher = number | number[] | string | SlidesPredicate;\r\n\r\n/**\r\n * The component for managing all slides include clones.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Slides component object.\r\n */\r\nexport function Slides( Splide: Splide, Components: Components, options: Options ): SlidesComponent {\r\n  const { on, emit, bind } = EventInterface( Splide );\r\n  const { slides, list } = Components.Elements;\r\n\r\n  /**\r\n   * Stores all SlideComponent objects.\r\n   */\r\n  const Slides: SlideComponent[] = [];\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, init );\r\n    on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\r\n      Slides.sort( ( Slide1, Slide2 ) => Slide1.index - Slide2.index );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    slides.forEach( ( slide, index ) => { register( slide, index, -1 ) } );\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    forEach( Slide => { Slide.destroy() } );\r\n    empty( Slides );\r\n  }\r\n\r\n  /**\r\n   * Manually updates the status of all slides.\r\n   */\r\n  function update(): void {\r\n    forEach( Slide => { Slide.update() } );\r\n  }\r\n\r\n  /**\r\n   * Registers a slide element and creates a Slide object.\r\n   *\r\n   * @param slide      - A slide element to register.\r\n   * @param index      - A slide index.\r\n   * @param slideIndex - A slide index for clones. This must be `-1` for regular slides.\r\n   */\r\n  function register( slide: HTMLElement, index: number, slideIndex: number ): void {\r\n    const object = Slide( Splide, index, slideIndex, slide );\r\n    object.mount();\r\n    Slides.push( object );\r\n  }\r\n\r\n  /**\r\n   * Returns all Slide objects.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return An array with Slide objects.\r\n   */\r\n  function get( excludeClones?: boolean ): SlideComponent[] {\r\n    return excludeClones ? filter( Slide => ! Slide.isClone ) : Slides;\r\n  }\r\n\r\n  /**\r\n   * Returns slides in the specified page.\r\n   *\r\n   * @param page - A page index.\r\n   *\r\n   * @return An array with slides that belong to the page.\r\n   */\r\n  function getIn( page: number ): SlideComponent[] {\r\n    const { Controller } = Components;\r\n    const index = Controller.toIndex( page );\r\n    const max   = Controller.hasFocus() ? 1 : options.perPage;\r\n    return filter( Slide => between( Slide.index, index, index + max - 1 ) );\r\n  }\r\n\r\n  /**\r\n   * Returns a Slide object at the specified index.\r\n   *\r\n   * @param index - A slide index.\r\n   *\r\n   * @return A Slide object if available, or otherwise `undefined`.\r\n   */\r\n  function getAt( index: number ): SlideComponent | undefined {\r\n    return filter( index )[ 0 ];\r\n  }\r\n\r\n  /**\r\n   * Inserts a slide or slides at a specified index.\r\n   *\r\n   * @param items - A slide element, an HTML string or an array with them.\r\n   * @param index - Optional. An index to insert the slide at. If omitted, appends it to the list.\r\n   */\r\n  function add( items: string | Element | Array<string | Element>, index?: number ): void {\r\n    forEachItem( items, slide => {\r\n      if ( isString( slide ) ) {\r\n        slide = parseHtml( slide );\r\n      }\r\n\r\n      if ( isHTMLElement( slide ) ) {\r\n        const ref = slides[ index ];\r\n        ref ? before( slide, ref ) : append( list, slide );\r\n        addClass( slide, options.classes.slide );\r\n        observeImages( slide, apply( emit, EVENT_RESIZE ) );\r\n      }\r\n    } );\r\n\r\n    emit( EVENT_REFRESH );\r\n  }\r\n\r\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\r\n  function remove( matcher: SlideMatcher ): void {\r\n    removeNode( filter( matcher ).map( Slide => Slide.slide ) );\r\n    emit( EVENT_REFRESH );\r\n  }\r\n\r\n  /**\r\n   * Iterates over Slide objects by the iteratee function.\r\n   *\r\n   * @param iteratee      - An iteratee function that takes a Slide object, an index and an array with Slides.\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   */\r\n  function forEach( iteratee: SlidesIteratee, excludeClones?: boolean ): void {\r\n    get( excludeClones ).forEach( iteratee );\r\n  }\r\n\r\n  /**\r\n   * Filters Slides by the matcher\r\n   * that can be an index, an array with indices, a selector, or a predicate function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or a predicate function.\r\n   *\r\n   * @return An array with SlideComponent objects.\r\n   */\r\n  function filter( matcher: SlideMatcher ): SlideComponent[] {\r\n    return Slides.filter( isFunction( matcher )\r\n      ? matcher\r\n      : Slide => isString( matcher )\r\n        ? matches( Slide.slide, matcher )\r\n        : includes( toArray( matcher ), Slide.index )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Adds a CSS rule to all slides or containers.\r\n   *\r\n   * @param prop         - A property name.\r\n   * @param value        - A CSS value to add.\r\n   * @param useContainer - Optional. Determines whether to apply the rule to the container or not.\r\n   */\r\n  function style( prop: string, value: string | number, useContainer?: boolean ): void {\r\n    forEach( Slide => { Slide.style( prop, value, useContainer ) } );\r\n  }\r\n\r\n  /**\r\n   * Invokes the callback after all images in the element are loaded.\r\n   *\r\n   * @param elm      - An element that may contain images.\r\n   * @param callback - A callback function.\r\n   */\r\n  function observeImages( elm: Element, callback: AnyFunction ): void {\r\n    const images = queryAll( elm, 'img' );\r\n    let { length } = images;\r\n\r\n    if ( length ) {\r\n      images.forEach( img => {\r\n        bind( img, 'load error', () => {\r\n          if ( ! --length ) {\r\n            callback();\r\n          }\r\n        } );\r\n      } );\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the length of slides.\r\n   *\r\n   * @param excludeClones - Optional. Determines whether to exclude clones or not.\r\n   *\r\n   * @return The length of slides.\r\n   */\r\n  function getLength( excludeClones?: boolean ): number {\r\n    return excludeClones ? slides.length : Slides.length;\r\n  }\r\n\r\n  /**\r\n   * Checks if the number of slides is over than the `perPage` option, including clones.\r\n   *\r\n   * @return `true` if there are enough slides, or otherwise `false`.\r\n   */\r\n  function isEnough(): boolean {\r\n    return Slides.length > options.perPage;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n    update,\r\n    register,\r\n    get,\r\n    getIn,\r\n    getAt,\r\n    add,\r\n    remove,\r\n    forEach,\r\n    filter,\r\n    style,\r\n    getLength,\r\n    isEnough,\r\n  };\r\n}\r\n","import { TTB } from '../../constants/directions';\r\nimport { EVENT_REFRESH, EVENT_RESIZE, EVENT_RESIZED, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface, Throttle } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, apply, assert, isObject, rect, style, unit } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Layout component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LayoutComponent extends BaseComponent {\r\n  listSize(): number;\r\n  slideSize( index: number, withoutGap?: boolean ): number;\r\n  sliderSize(): number;\r\n  totalSize( index?: number, withoutGap?: boolean ): number;\r\n  getPadding( right: boolean ): number;\r\n}\r\n\r\n/**\r\n * The component that layouts slider components and provides methods for dimensions.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Layout component object.\r\n */\r\nexport function Layout( Splide: Splide, Components: Components, options: Options ): LayoutComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const { Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n  const { root, track, list } = Components.Elements;\r\n  const { getAt, style: styleSlides } = Slides;\r\n\r\n  /**\r\n   * Indicates whether the slider direction is vertical or not.\r\n   */\r\n  let vertical: boolean;\r\n\r\n  /**\r\n   * Keeps the DOMRect object of the root element.\r\n   */\r\n  let rootRect: DOMRect;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    bind( window, 'resize load', Throttle( apply( emit, EVENT_RESIZE ) ) );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\r\n    on( EVENT_RESIZE, resize );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component on `mount` or `updated`.\r\n   * Uses `max-width` for the root to prevent the slider from exceeding the parent element.\r\n   */\r\n  function init(): void {\r\n    rootRect = null;\r\n    vertical = options.direction === TTB;\r\n\r\n    style( root, 'maxWidth', unit( options.width ) );\r\n    style( track, resolve( 'paddingLeft' ), cssPadding( false ) );\r\n    style( track, resolve( 'paddingRight' ), cssPadding( true ) );\r\n\r\n    resize();\r\n  }\r\n\r\n  /**\r\n   * Updates dimensions of some elements when the slider is resized.\r\n   */\r\n  function resize(): void {\r\n    const newRect = rect( root );\r\n\r\n    if ( ! rootRect || rootRect.width !== newRect.width || rootRect.height !== newRect.height ) {\r\n      style( track, 'height', cssTrackHeight() );\r\n\r\n      styleSlides( resolve( 'marginRight' ), unit( options.gap ) );\r\n      styleSlides( 'width', cssSlideWidth() );\r\n      styleSlides( 'height', cssSlideHeight(), true );\r\n\r\n      rootRect = newRect;\r\n      emit( EVENT_RESIZED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parses the padding option and returns the value for each side.\r\n   * This method returns `paddingTop` or `paddingBottom` for the vertical slider.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value as a CSS string.\r\n   */\r\n  function cssPadding( right: boolean ): string {\r\n    const { padding } = options;\r\n    const prop = resolve( right ? 'right' : 'left' );\r\n    return padding && unit( padding[ prop ] || ( isObject( padding ) ? 0 : padding ) ) || '0px';\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the track element as a CSS string.\r\n   *\r\n   * @return The height of the track.\r\n   */\r\n  function cssTrackHeight(): string {\r\n    let height = '';\r\n\r\n    if ( vertical ) {\r\n      height = cssHeight();\r\n      assert( height, 'height or heightRatio is missing.' );\r\n      height = `calc(${ height } - ${ cssPadding( false ) } - ${ cssPadding( true ) })`;\r\n    }\r\n\r\n    return height;\r\n  }\r\n\r\n  /**\r\n   * Converts options related with height to a CSS string.\r\n   *\r\n   * @return The height as a CSS string if available, or otherwise an empty string.\r\n   */\r\n  function cssHeight(): string {\r\n    return unit( options.height || rect( list ).width * options.heightRatio );\r\n  }\r\n\r\n  /**\r\n   * Returns the width of the slide as a CSS string.\r\n   *\r\n   * @return The width of the slide.\r\n   */\r\n  function cssSlideWidth(): string | null {\r\n    return options.autoWidth ? null : unit( options.fixedWidth ) || ( vertical ? '' : cssSlideSize() );\r\n  }\r\n\r\n  /**\r\n   * Returns the height of the slide as a CSS string.\r\n   *\r\n   * @return The height of the slide.\r\n   */\r\n  function cssSlideHeight(): string | null {\r\n    return unit( options.fixedHeight )\r\n      || ( vertical ? ( options.autoHeight ? null : cssSlideSize() ) : cssHeight() );\r\n  }\r\n\r\n  /**\r\n   * Returns the CSS string for slide width or height without gap.\r\n   *\r\n   * @return The CSS string for slide width or height.\r\n   */\r\n  function cssSlideSize(): string {\r\n    const gap = unit( options.gap );\r\n    return `calc((100%${ gap && ` + ${ gap }` })/${ options.perPage || 1 }${ gap && ` - ${ gap }` })`;\r\n  }\r\n\r\n  /**\r\n   * Returns the list width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @return The size of the track element in pixel.\r\n   */\r\n  function listSize(): number {\r\n    return rect( list )[ resolve( 'width' ) ];\r\n  }\r\n\r\n  /**\r\n   * Returns the slide width for the horizontal slider, or the height for the vertical slider.\r\n   *\r\n   * @param index      - Optional. A slide index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the gap amount or not.\r\n   *\r\n   * @return The size of the specified slide element in pixel.\r\n   */\r\n  function slideSize( index?: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index || 0 );\r\n    return Slide\r\n      ? rect( Slide.slide )[ resolve( 'width' ) ] + ( withoutGap ? 0 : getGap() )\r\n      : 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the total width or height of slides from the head of the slider to the specified index.\r\n   * This includes sizes of clones before the first slide.\r\n   *\r\n   * @param index      - A slide index. If omitted, uses the last index.\r\n   * @param withoutGap - Optional. Determines whether to exclude the last gap or not.\r\n   *\r\n   * @return The total width of slides in the horizontal slider, or the height in the vertical one.\r\n   */\r\n  function totalSize( index: number, withoutGap?: boolean ): number {\r\n    const Slide = getAt( index );\r\n\r\n    if ( Slide ) {\r\n      const right = rect( Slide.slide )[ resolve( 'right' ) ];\r\n      const left  = rect( list )[ resolve( 'left' ) ];\r\n      return abs( right - left ) + ( withoutGap ? 0 : getGap() );\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the slider size without clones before the first slide.\r\n   *\r\n   * @return The width or height of the slider without clones.\r\n   */\r\n  function sliderSize(): number {\r\n    return totalSize( Splide.length - 1, true ) - totalSize( -1, true );\r\n  }\r\n\r\n  /**\r\n   * Returns the gap value.\r\n   *\r\n   * @return The gap value in pixel.\r\n   */\r\n  function getGap(): number {\r\n    const Slide = getAt( 0 );\r\n    return Slide && parseFloat( style( Slide.slide, resolve( 'marginRight' ) ) ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the padding value.\r\n   * This method resolves the difference of the direction.\r\n   *\r\n   * @param right - Determines whether to get `paddingRight/Bottom` or `paddingLeft/Top`.\r\n   *\r\n   * @return The padding value in pixel.\r\n   */\r\n  function getPadding( right: boolean ): number {\r\n    return parseFloat( style( track, resolve( `padding${ right ? 'Right' : 'Left' }` ) ) ) || 0;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    listSize,\r\n    slideSize,\r\n    sliderSize,\r\n    totalSize,\r\n    getPadding,\r\n  };\r\n}\r\n","import { AnyFunction } from '../../types';\r\nimport { RequestInterval, RequestIntervalInterface } from '../RequestInterval/RequestInterval';\r\n\r\n\r\n/**\r\n * The interface for the returning value of the RequestInterval.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ThrottleInstance<F extends AnyFunction> extends Function {\r\n  ( ...args: Parameters<F> ): void;\r\n}\r\n\r\n/**\r\n * Returns the throttled function.\r\n *\r\n * @param func     - A function to throttle.\r\n * @param duration - Optional. Throttle duration in milliseconds.\r\n *\r\n * @return A throttled function.\r\n */\r\nexport function Throttle<F extends AnyFunction>(\r\n  func: F,\r\n  duration?: number\r\n): ThrottleInstance<F> {\r\n  let interval: RequestIntervalInterface;\r\n\r\n  function throttled(): void {\r\n    if ( ! interval ) {\r\n      interval = RequestInterval( duration || 0, () => {\r\n        func();\r\n        interval = null;\r\n      }, null, 1 );\r\n\r\n      interval.start();\r\n    }\r\n  }\r\n\r\n  return throttled;\r\n}\r\n","import { EVENT_REFRESH, EVENT_RESIZE, EVENT_UPDATED } from '../../constants/events';\r\nimport { LOOP } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { addClass, append, before, ceil, empty, pad, push, rect, remove } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Clone component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ClonesComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The multiplier to determine the number of clones.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport const MULTIPLIER = 2;\r\n\r\n/**\r\n * The component that generates clones for the loop slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Clones component object.\r\n */\r\nexport function Clones( Splide: Splide, Components: Components, options: Options ): ClonesComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { Elements, Slides } = Components;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * Stores all cloned elements.\r\n   */\r\n  const clones: HTMLElement[] = [];\r\n\r\n  /**\r\n   * Keeps the current number of clones.\r\n   */\r\n  let cloneCount: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_REFRESH, destroy );\r\n    on( EVENT_REFRESH, init );\r\n    on( [ EVENT_UPDATED, EVENT_RESIZE ], observe );\r\n  }\r\n\r\n  /**\r\n   * Removes all clones if available, and generates new clones.\r\n   */\r\n  function init(): void {\r\n    if ( ( cloneCount = computeCloneCount() ) ) {\r\n      generate( cloneCount );\r\n      emit( EVENT_RESIZE );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys clones.\r\n   */\r\n  function destroy(): void {\r\n    remove( clones );\r\n    empty( clones );\r\n  }\r\n\r\n  /**\r\n   * Observes the required clone count and refreshes the slider if necessary.\r\n   */\r\n  function observe(): void {\r\n    if ( cloneCount < computeCloneCount() ) {\r\n      emit( EVENT_REFRESH );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generates the specified number of clones.\r\n   *\r\n   * @param count - The number of clones to generate for each side.\r\n   */\r\n  function generate( count: number ): void {\r\n    const slides = Slides.get().slice();\r\n    const { length } = slides;\r\n\r\n    if ( length ) {\r\n      while ( slides.length < count ) {\r\n        push( slides, slides );\r\n      }\r\n\r\n      push( slides.slice( -count ), slides.slice( 0, count ) ).forEach( ( Slide, index ) => {\r\n        const isHead = index < count;\r\n        const clone  = cloneDeep( Slide.slide, index );\r\n        isHead ? before( clone, slides[ 0 ].slide ) : append( Elements.list, clone );\r\n        push( clones, clone );\r\n        Slides.register( clone, index - count + ( isHead ? 0 : length ), Slide.index );\r\n      } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deeply clones the provided element with removing the ID attribute.\r\n   *\r\n   * @param elm   - An element to clone.\r\n   * @param index - An index of the clone.\r\n   *\r\n   * @return A cloned element.\r\n   */\r\n  function cloneDeep( elm: HTMLElement, index: number ): HTMLElement {\r\n    const clone = elm.cloneNode( true ) as HTMLElement;\r\n    addClass( clone, options.classes.clone );\r\n    clone.id = `${ Splide.root.id }-clone${ pad( index + 1 ) }`;\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Returns the number of elements to generate.\r\n   * This always returns 0 if the slider type is not `'loop'`.\r\n   *\r\n   * @return The number of clones.\r\n   */\r\n  function computeCloneCount(): number {\r\n    let { clones } = options;\r\n\r\n    if ( ! Splide.is( LOOP ) ) {\r\n      clones = 0;\r\n    } else if ( ! clones ) {\r\n      const fixedSize  = options[ resolve( 'fixedWidth' ) ] && Components.Layout.slideSize( 0 );\r\n      const fixedCount = fixedSize && ceil( rect( Elements.track )[ resolve( 'width' ) ] / fixedSize );\r\n      clones = fixedCount || ( options[ resolve( 'autoWidth' ) ] && Splide.length ) || options.perPage * MULTIPLIER;\r\n    }\r\n\r\n    return clones;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","import {\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVE,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_RESIZED,\r\n  EVENT_SHIFTED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { IDLE, MOVING } from '../../constants/states';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, ceil, clamp, isUndefined, rect, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Move component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface MoveComponent extends BaseComponent {\r\n  move( dest: number, index: number, prev: number, callback?: AnyFunction ): void;\r\n  jump( index: number ): void;\r\n  translate( position: number, preventLoop?: boolean ): void;\r\n  shift( position: number, backwards: boolean ): number;\r\n  cancel(): void;\r\n  toIndex( position: number ): number;\r\n  toPosition( index: number, trimming?: boolean ): number;\r\n  getPosition(): number;\r\n  getLimit( max: boolean ): number;\r\n  exceededLimit( max?: boolean | undefined, position?: number ): boolean;\r\n\r\n  /** @internal */\r\n  reposition(): void;\r\n}\r\n\r\n/**\r\n * The component for moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Move component object.\r\n */\r\nexport function Move( Splide: Splide, Components: Components, options: Options ): MoveComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { set } = Splide.state;\r\n  const { slideSize, getPadding, totalSize, listSize, sliderSize } = Components.Layout;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { list, track } = Components.Elements;\r\n\r\n  /**\r\n   * Holds the Transition component.\r\n   */\r\n  let Transition: TransitionComponent;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    Transition = Components.Transition;\r\n    on( [ EVENT_MOUNTED, EVENT_RESIZED, EVENT_UPDATED, EVENT_REFRESH ], reposition );\r\n  }\r\n\r\n  /**\r\n   * Repositions the slider.\r\n   * - Do not call `cancel()` here because LazyLoad may emit resize while transitioning.\r\n   * - iOS Safari emits window resize event while the user swipes the slider because of the bottom bar.\r\n   * - Slide components listening to the internal repositioned event to update their visibility.\r\n   */\r\n  function reposition(): void {\r\n    if ( ! Components.Controller.isBusy() ) {\r\n      Components.Scroll.cancel();\r\n      jump( Splide.index );\r\n      Components.Slides.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the dest index with the Transition component.\r\n   *\r\n   * @param dest     - A destination index to go to, including clones'.\r\n   * @param index    - A slide index.\r\n   * @param prev     - A previous index.\r\n   * @param callback - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function move( dest: number, index: number, prev: number, callback?: AnyFunction ): void {\r\n    const position = getPosition();\r\n\r\n    if ( dest !== index && canShift( dest > index ) ) {\r\n      cancel();\r\n      translate( shift( position, dest > index ), true );\r\n    }\r\n\r\n    set( MOVING );\r\n    emit( EVENT_MOVE, index, prev, dest );\r\n\r\n    Transition.start( index, () => {\r\n      set( IDLE );\r\n      emit( EVENT_MOVED, index, prev, dest );\r\n      callback && callback();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Jumps to the slide at the specified index.\r\n   *\r\n   * @param index - An index to jump to.\r\n   */\r\n  function jump( index: number ): void {\r\n    translate( toPosition( index, true ) );\r\n  }\r\n\r\n  /**\r\n   * Moves the slider to the provided position.\r\n   *\r\n   * @param position    - The position to move to.\r\n   * @param preventLoop - Optional. If `true`, sets the provided position as is.\r\n   */\r\n  function translate( position: number, preventLoop?: boolean ): void {\r\n    if ( ! Splide.is( FADE ) ) {\r\n      const destination = preventLoop ? position : loop( position );\r\n      style( list, 'transform', `translate${ resolve( 'X' ) }(${ destination }px)` );\r\n      position !== destination && emit( EVENT_SHIFTED );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loops the provided position if it exceeds bounds.\r\n   *\r\n   * @param position - A position to loop.\r\n   */\r\n  function loop( position: number ): number {\r\n    if ( Splide.is( LOOP ) ) {\r\n      const diff        = orient( position - getPosition() );\r\n      const exceededMin = exceededLimit( false, position ) && diff < 0;\r\n      const exceededMax = exceededLimit( true, position ) && diff > 0;\r\n\r\n      if ( exceededMin || exceededMax ) {\r\n        position = shift( position, exceededMax );\r\n      }\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Adds or subtracts the slider width to the provided position.\r\n   *\r\n   * @param position  - A position to shift.\r\n   * @param backwards - Determines whether to shift the slider backwards or forwards.\r\n   *\r\n   * @return The shifted position.\r\n   */\r\n  function shift( position: number, backwards: boolean ): number {\r\n    const excess = position - getLimit( backwards );\r\n    const size   = sliderSize();\r\n    position -= orient( size * ( ceil( abs( excess ) / size ) || 1 ) ) * ( backwards ? 1 : -1 );\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Cancels transition.\r\n   */\r\n  function cancel(): void {\r\n    translate( getPosition() );\r\n    Transition.cancel();\r\n  }\r\n\r\n  /**\r\n   * Returns the closest index to the position.\r\n   *\r\n   * @param position - A position to convert.\r\n   *\r\n   * @return The closest index to the position.\r\n   */\r\n  function toIndex( position: number ): number {\r\n    const Slides = Components.Slides.get();\r\n\r\n    let index       = 0;\r\n    let minDistance = Infinity;\r\n\r\n    for ( let i = 0; i < Slides.length; i++ ) {\r\n      const slideIndex = Slides[ i ].index;\r\n      const distance   = abs( toPosition( slideIndex, true ) - position );\r\n\r\n      if ( distance <= minDistance ) {\r\n        minDistance = distance;\r\n        index       = slideIndex;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the position.\r\n   *\r\n   * @param index    - An index to convert.\r\n   * @param trimming - Optional. Whether to trim edge spaces or not.\r\n   *\r\n   * @return The position corresponding with the index.\r\n   */\r\n  function toPosition( index: number, trimming?: boolean ): number {\r\n    const position = orient( totalSize( index - 1 ) - offset( index ) );\r\n    return trimming ? trim( position ) : position;\r\n  }\r\n\r\n  /**\r\n   * Returns the current position.\r\n   *\r\n   * @return The position of the list element.\r\n   */\r\n  function getPosition(): number {\r\n    const left = resolve( 'left' );\r\n    return rect( list )[ left ] - rect( track )[ left ] + orient( getPadding( false ) );\r\n  }\r\n\r\n  /**\r\n   * Trims spaces on the edge of the slider.\r\n   *\r\n   * @param position - A position to trim.\r\n   *\r\n   * @return A trimmed position.\r\n   */\r\n  function trim( position: number ): number {\r\n    if ( options.trimSpace && Splide.is( SLIDE ) ) {\r\n      position = clamp( position, 0, orient( sliderSize() - listSize() ) );\r\n    }\r\n\r\n    return position;\r\n  }\r\n\r\n  /**\r\n   * Returns the offset amount.\r\n   *\r\n   * @param index - An index.\r\n   */\r\n  function offset( index: number ): number {\r\n    const { focus } = options;\r\n    return focus === 'center' ? ( listSize() - slideSize( index, true ) ) / 2 : +focus * slideSize( index ) || 0;\r\n  }\r\n\r\n  /**\r\n   * Returns the limit number that the slider can move to.\r\n   *\r\n   * @param max - Determines whether to return the maximum or minimum limit.\r\n   *\r\n   * @return The border number.\r\n   */\r\n  function getLimit( max: boolean ): number {\r\n    return toPosition( max ? Components.Controller.getEnd() : 0, !! options.trimSpace );\r\n  }\r\n\r\n  /**\r\n   * Checks if there is enough width to shift the slider.\r\n   *\r\n   * @param backwards - `true` for checking backwards, or `false` for doing forwards.\r\n   *\r\n   * @return `true` if the slider can be shifted for the specified direction, or otherwise `false`.\r\n   */\r\n  function canShift( backwards: boolean ): boolean {\r\n    const shifted = orient( shift( getPosition(), backwards ) );\r\n    return backwards\r\n      ? shifted >= 0\r\n      : shifted <= list[ `scroll${ resolve( 'Width' ) }` ] - rect( track )[ resolve( 'width' ) ];\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided position exceeds the minimum or maximum limit or not.\r\n   *\r\n   * @param max      - Optional. `true` for testing max, `false` for min, and `undefined` for both.\r\n   * @param position - Optional. A position to test. If omitted, tests the current position.\r\n   *\r\n   * @return `true` if the position exceeds the limit, or otherwise `false`.\r\n   */\r\n  function exceededLimit( max?: boolean | undefined, position?: number ): boolean {\r\n    position = isUndefined( position ) ? getPosition() : position;\r\n    const exceededMin = max !== true && orient( position ) < orient( getLimit( false ) );\r\n    const exceededMax = max !== false && orient( position ) > orient( getLimit( true ) );\r\n    return exceededMin || exceededMax;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    move,\r\n    jump,\r\n    translate,\r\n    shift,\r\n    cancel,\r\n    toIndex,\r\n    toPosition,\r\n    getPosition,\r\n    getLimit,\r\n    exceededLimit,\r\n    reposition,\r\n  };\r\n}\r\n","import { EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { MOVING, SCROLLING } from '../../constants/states';\r\nimport { LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { apply, approximatelyEqual, between, clamp, floor, isString, isUndefined, max } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Controller component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ControllerComponent extends BaseComponent {\r\n  go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void;\r\n  scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\r\n  getNext( destination?: boolean ): number;\r\n  getPrev( destination?: boolean ): number;\r\n  getAdjacent( prev: boolean, destination?: boolean ): number;\r\n  getEnd(): number;\r\n  setIndex( index: number ): void;\r\n  getIndex( prev?: boolean ): number;\r\n  toIndex( page: number ): number;\r\n  toPage( index: number ): number;\r\n  toDest( position: number ): number;\r\n  hasFocus(): boolean;\r\n  isBusy(): boolean;\r\n}\r\n\r\n/**\r\n * The component for controlling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Controller component object.\r\n */\r\nexport function Controller( Splide: Splide, Components: Components, options: Options ): ControllerComponent {\r\n  const { on } = EventInterface( Splide );\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit, toPosition } = Move;\r\n  const { isEnough, getLength } = Components.Slides;\r\n  const isLoop  = Splide.is( LOOP );\r\n  const isSlide = Splide.is( SLIDE );\r\n  const getNext = apply( getAdjacent, false );\r\n  const getPrev = apply( getAdjacent, true );\r\n\r\n  /**\r\n   * The current index.\r\n   */\r\n  let currIndex = options.start || 0;\r\n\r\n  /**\r\n   * The previous index.\r\n   */\r\n  let prevIndex = currIndex;\r\n\r\n  /**\r\n   * The latest number of slides.\r\n   */\r\n  let slideCount: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perMove: number;\r\n\r\n  /**\r\n   * The latest `perMove` value.\r\n   */\r\n  let perPage: number;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], init );\r\n  }\r\n\r\n  /**\r\n   * Initializes some parameters.\r\n   * Needs to check the slides length since the current index may be out of the range after refresh.\r\n   * The process order must be Elements -> Controller -> Move.\r\n   */\r\n  function init(): void {\r\n    slideCount = getLength( true );\r\n    perMove    = options.perMove;\r\n    perPage    = options.perPage;\r\n\r\n    const index = clamp( currIndex, 0, slideCount - 1 );\r\n\r\n    if ( index !== currIndex ) {\r\n      currIndex = index;\r\n      Move.reposition();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves the slider by the control pattern.\r\n   *\r\n   * @see `Splide#go()`\r\n   *\r\n   * @param control        - A control pattern.\r\n   * @param allowSameIndex - Optional. Determines whether to allow to go to the current index or not.\r\n   * @param callback       - Optional. A callback function invoked after transition ends.\r\n   */\r\n  function go( control: number | string, allowSameIndex?: boolean, callback?: AnyFunction ): void {\r\n    if ( ! isBusy() ) {\r\n      const dest  = parse( control );\r\n      const index = loop( dest );\r\n\r\n      if ( index > -1 && ( allowSameIndex || index !== currIndex ) ) {\r\n        setIndex( index );\r\n        Move.move( dest, index, prevIndex, callback );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the specified destination with updating indices.\r\n   *\r\n   * @param destination - An index to scroll the slider to.\r\n   * @param duration    - Optional. Specifies the scroll duration.\r\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\r\n   * @param callback    - Optional. A callback function invoked after scroll ends.\r\n   */\r\n  function scroll( destination: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void {\r\n    Components.Scroll.scroll( destination, duration, snap, () => {\r\n      setIndex( loop( Move.toIndex( Move.getPosition() ) ) );\r\n      callback && callback();\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Parses the control and returns a slide index.\r\n   *\r\n   * @param control - A control pattern to parse.\r\n   *\r\n   * @return A `dest` index.\r\n   */\r\n  function parse( control: number | string ): number {\r\n    let index = currIndex;\r\n\r\n    if ( isString( control ) ) {\r\n      const [ , indicator, number ] = control.match( /([+\\-<>])(\\d+)?/ ) || [];\r\n\r\n      if ( indicator === '+' || indicator === '-' ) {\r\n        index = computeDestIndex( currIndex + +`${ indicator }${ +number || 1 }`, currIndex );\r\n      } else if ( indicator === '>' ) {\r\n        index = number ? toIndex( +number ) : getNext( true );\r\n      } else if ( indicator === '<' ) {\r\n        index = getPrev( true );\r\n      }\r\n    } else {\r\n      index = isLoop ? control : clamp( control, 0, getEnd() );\r\n    }\r\n\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Returns an adjacent destination index.\r\n   *\r\n   * @internal\r\n   *\r\n   * @param prev        - Determines whether to return a previous or next index.\r\n   * @param destination - Optional. Determines whether to get a destination index or a slide one.\r\n   *\r\n   * @return An adjacent index if available, or otherwise `-1`.\r\n   */\r\n  function getAdjacent( prev: boolean, destination?: boolean ): number {\r\n    const number = perMove || ( hasFocus() ? 1 : perPage );\r\n    const dest   = computeDestIndex( currIndex + number * ( prev ? -1 : 1 ), currIndex, ! ( perMove || hasFocus() ) );\r\n\r\n    if ( dest === -1 && isSlide ) {\r\n      if ( ! approximatelyEqual( getPosition(), getLimit( ! prev ), 1 ) ) {\r\n        return prev ? 0 : getEnd();\r\n      }\r\n    }\r\n\r\n    return destination ? dest : loop( dest );\r\n  }\r\n\r\n  /**\r\n   * Converts the desired destination index to the valid one.\r\n   * - If the `move` option is `true`, finds the dest index whose position is different with the current one.\r\n   * - This may return clone indices if the editor is the loop mode,\r\n   *   or `-1` if there is no slide to go.\r\n   * - There are still slides where the slider can go if borders are between `from` and `dest`.\r\n   *\r\n   * @param dest     - The desired destination.\r\n   * @param from     - A base index.\r\n   * @param snapPage - Optional. Whether to snap a page or not.\r\n   *\r\n   * @return A converted destination index, including clones.\r\n   */\r\n  function computeDestIndex( dest: number, from: number, snapPage?: boolean ): number {\r\n    if ( isEnough() ) {\r\n      const end   = getEnd();\r\n      const index = computeMovableDestIndex( dest );\r\n\r\n      if ( index !== dest ) {\r\n        from     = dest;\r\n        dest     = index;\r\n        snapPage = false;\r\n      }\r\n\r\n      if ( dest < 0 || dest > end ) {\r\n        if ( between( 0, dest, from, true ) || between( end, from, dest, true ) ) {\r\n          dest = toIndex( toPage( dest ) );\r\n        } else {\r\n          if ( isLoop ) {\r\n            dest = snapPage\r\n              ? dest < 0 ? - ( slideCount % perPage || perPage ) : slideCount\r\n              : dest;\r\n          } else if ( options.rewind ) {\r\n            dest = dest < 0 ? end : 0;\r\n          } else {\r\n            dest = -1;\r\n          }\r\n        }\r\n      } else {\r\n        if ( snapPage && dest !== from ) {\r\n          dest = toIndex( toPage( from ) + ( dest < from ? -1 : 1 ) );\r\n        }\r\n      }\r\n    } else {\r\n      dest = -1;\r\n    }\r\n\r\n    return dest;\r\n  }\r\n\r\n  /**\r\n   * Finds the dest index whose position is different with the current one.\r\n   * This can be negative or greater than `length - 1`.\r\n   *\r\n   * @param dest - A dest index.\r\n   *\r\n   * @return A dest index.\r\n   */\r\n  function computeMovableDestIndex( dest: number ): number {\r\n    if ( isSlide && options.trimSpace === 'move' && dest !== currIndex ) {\r\n      const position = getPosition();\r\n\r\n      while ( position === toPosition( dest, true ) && between( dest, 0, Splide.length - 1, ! options.rewind ) ) {\r\n        dest < currIndex ? --dest : ++dest;\r\n      }\r\n    }\r\n\r\n    return dest;\r\n  }\r\n\r\n  /**\r\n   * Loops the provided index only in the loop mode.\r\n   *\r\n   * @param index - An index to loop.\r\n   *\r\n   * @return A looped index.\r\n   */\r\n  function loop( index: number ): number {\r\n    return isLoop ? ( index + slideCount ) % slideCount || 0 : index;\r\n  }\r\n\r\n  /**\r\n   * Returns the end index where the slider can go.\r\n   * For example, if the slider has 10 slides and the `perPage` option is 3,\r\n   * the slider can go to the slide 8 (the index is 7).\r\n   *\r\n   * @return An end index.\r\n   */\r\n  function getEnd(): number {\r\n    return max( slideCount - ( hasFocus() || ( isLoop && perMove ) ? 1 : perPage ), 0 );\r\n  }\r\n\r\n  /**\r\n   * Converts the page index to the slide index.\r\n   *\r\n   * @param page - A page index to convert.\r\n   *\r\n   * @return A slide index.\r\n   */\r\n  function toIndex( page: number ): number {\r\n    return clamp( hasFocus() ? page : perPage * page, 0, getEnd() );\r\n  }\r\n\r\n  /**\r\n   * Converts the slide index to the page index.\r\n   *\r\n   * @param index - An index to convert.\r\n   *\r\n   * @return A page index.\r\n   */\r\n  function toPage( index: number ): number {\r\n    return hasFocus()\r\n      ? index\r\n      : floor( ( index >= getEnd() ? slideCount - 1 : index ) / perPage );\r\n  }\r\n\r\n  /**\r\n   * Converts the destination position to the dest index.\r\n   *\r\n   * @param destination - A position to convert.\r\n   *\r\n   * @return A dest index.\r\n   */\r\n  function toDest( destination: number ): number {\r\n    const closest = Move.toIndex( destination );\r\n    return isSlide ? clamp( closest, 0, getEnd() ) : closest;\r\n  }\r\n\r\n  /**\r\n   * Sets a new index and retains old one.\r\n   *\r\n   * @param index - A new index to set.\r\n   */\r\n  function setIndex( index: number ): void {\r\n    if ( index !== currIndex ) {\r\n      prevIndex = currIndex;\r\n      currIndex = index;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the current/previous index.\r\n   *\r\n   * @param prev - Optional. Whether to return previous index or not.\r\n   */\r\n  function getIndex( prev?: boolean ): number {\r\n    return prev ? prevIndex : currIndex;\r\n  }\r\n\r\n  /**\r\n   * Verifies if the focus option is available or not.\r\n   *\r\n   * @return `true` if the slider has the focus option.\r\n   */\r\n  function hasFocus(): boolean {\r\n    return ! isUndefined( options.focus ) || options.isNavigation;\r\n  }\r\n\r\n  /**\r\n   * Checks if the slider is moving/scrolling or not.\r\n   *\r\n   * @return `true` if the slider can move, or otherwise `false`.\r\n   */\r\n  function isBusy(): boolean {\r\n    return Splide.state.is( [ MOVING, SCROLLING ] ) && !! options.waitForTransition;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    go,\r\n    scroll,\r\n    getNext,\r\n    getPrev,\r\n    getAdjacent,\r\n    getEnd,\r\n    setIndex,\r\n    getIndex,\r\n    toIndex,\r\n    toPage,\r\n    toDest,\r\n    hasFocus,\r\n    isBusy,\r\n  };\r\n}\r\n","import { ALL_ATTRIBUTES, ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport { CLASS_ARROWS } from '../../constants/classes';\r\nimport {\r\n  EVENT_ARROWS_MOUNTED,\r\n  EVENT_ARROWS_UPDATED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLLED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  append,\r\n  apply,\r\n  assign,\r\n  before,\r\n  create,\r\n  display,\r\n  parseHtml,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from '../../utils';\r\nimport { PATH, SIZE, XML_NAME_SPACE } from './path';\r\n\r\n\r\n/**\r\n * The interface for the Arrows component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ArrowsComponent extends BaseComponent {\r\n  arrows: { prev?: HTMLButtonElement, next?: HTMLButtonElement };\r\n}\r\n\r\n/**\r\n * The component for handling previous and next arrows.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Arrows component object.\r\n */\r\nexport function Arrows( Splide: Splide, Components: Components, options: Options ): ArrowsComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, bind, emit } = event;\r\n  const { classes, i18n } = options;\r\n  const { Elements, Controller } = Components;\r\n  const { arrows: userArrows, track } = Elements;\r\n\r\n  /**\r\n   * The wrapper element.\r\n   */\r\n  let wrapper = userArrows;\r\n\r\n  /**\r\n   * The previous arrow element.\r\n   */\r\n  let prev = Elements.prev;\r\n\r\n  /**\r\n   * The next arrow element.\r\n   */\r\n  let next = Elements.next;\r\n\r\n  /**\r\n   * Indicates whether the component creates arrows or retrieved from the DOM.\r\n   */\r\n  let created: boolean;\r\n\r\n  /**\r\n   * Holds modifier classes.\r\n   */\r\n  let wrapperClasses: string;\r\n\r\n  /**\r\n   * An object with previous and next arrows.\r\n   */\r\n  const arrows: ArrowsComponent[ 'arrows' ] = {};\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    init();\r\n    on( EVENT_UPDATED, remount );\r\n  }\r\n\r\n  /**\r\n   * Remounts the component.\r\n   */\r\n  function remount(): void {\r\n    destroy();\r\n    mount();\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const enabled = options.arrows;\r\n\r\n    if ( enabled && ! ( prev && next ) ) {\r\n      createArrows();\r\n    }\r\n\r\n    if ( prev && next ) {\r\n      assign( arrows, { prev, next } );\r\n      display( wrapper, enabled ? '' : 'none' );\r\n      addClass( wrapper, ( wrapperClasses = `${ CLASS_ARROWS }--${ options.direction }` ) );\r\n\r\n      if ( enabled ) {\r\n        listen();\r\n        update();\r\n        setAttribute( [ prev, next ], ARIA_CONTROLS, track.id );\r\n        emit( EVENT_ARROWS_MOUNTED, prev, next );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    event.destroy();\r\n    removeClass( wrapper, wrapperClasses );\r\n\r\n    if ( created ) {\r\n      remove( userArrows ? [ prev, next ] : wrapper );\r\n      prev = next = null;\r\n    } else {\r\n      removeAttribute( [ prev, next ], ALL_ATTRIBUTES );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    on( [ EVENT_MOVED, EVENT_REFRESH, EVENT_SCROLLED ], update );\r\n    bind( next, 'click', apply( go, '>' ) );\r\n    bind( prev, 'click', apply( go, '<' ) );\r\n  }\r\n\r\n  /**\r\n   * The wrapper function of Controller#go().\r\n   *\r\n   * @param control - The control pattern.\r\n   */\r\n  function go( control: string ): void {\r\n    Controller.go( control, true );\r\n  }\r\n\r\n  /**\r\n   * Create arrows and append them to the slider.\r\n   */\r\n  function createArrows(): void {\r\n    wrapper = userArrows || create( 'div', classes.arrows );\r\n    prev    = createArrow( true );\r\n    next    = createArrow( false );\r\n    created = true;\r\n\r\n    append( wrapper, [ prev, next ] );\r\n    ! userArrows && before( wrapper, track );\r\n  }\r\n\r\n  /**\r\n   * Creates an arrow button.\r\n   * In IE, A SVG element is focusable.\r\n   *\r\n   * @param prev - Determines whether to create a previous or next arrow.\r\n   *\r\n   * @return A created button element.\r\n   */\r\n  function createArrow( prev: boolean ): HTMLButtonElement {\r\n    const arrow = `<button class=\"${ classes.arrow } ${ prev ? classes.prev : classes.next }\" type=\"button\">`\r\n      +\t`<svg xmlns=\"${ XML_NAME_SPACE }\" viewBox=\"0 0 ${ SIZE } ${ SIZE }\" width=\"${ SIZE }\" height=\"${ SIZE }\" focusable=\"false\">`\r\n      + `<path d=\"${ options.arrowPath || PATH }\" />`;\r\n\r\n    return parseHtml<HTMLButtonElement>( arrow );\r\n  }\r\n\r\n  /**\r\n   * Updates status of arrows, such as `disabled` and `aria-label`.\r\n   */\r\n  function update(): void {\r\n    const index     = Splide.index;\r\n    const prevIndex = Controller.getPrev();\r\n    const nextIndex = Controller.getNext();\r\n    const prevLabel = prevIndex > -1 && index < prevIndex ? i18n.last : i18n.prev;\r\n    const nextLabel = nextIndex > -1 && index > nextIndex ? i18n.first : i18n.next;\r\n\r\n    prev.disabled = prevIndex < 0;\r\n    next.disabled = nextIndex < 0;\r\n\r\n    setAttribute( prev, ARIA_LABEL, prevLabel );\r\n    setAttribute( next, ARIA_LABEL, nextLabel );\r\n\r\n    emit( EVENT_ARROWS_UPDATED, prev, next, prevIndex, nextIndex );\r\n  }\r\n\r\n  return {\r\n    arrows,\r\n    mount,\r\n    destroy,\r\n  };\r\n}\r\n","/**\r\n * The namespace for SVG elements.\r\n */\r\nexport const XML_NAME_SPACE = 'http://www.w3.org/2000/svg';\r\n\r\n/**\r\n * The arrow path.\r\n */\r\nexport const PATH = 'm15.5 0.932-4.3 4.38 14.5 14.6-14.5 14.5 4.3 4.4 14.6-14.6 4.4-4.3-4.4-4.4-14.6-14.6z';\r\n\r\n/**\r\n * SVG width and height.\r\n */\r\nexport const SIZE = 40;\r\n","import { ARIA_CONTROLS, ARIA_LABEL } from '../../constants/attributes';\r\nimport { CLASS_ACTIVE } from '../../constants/classes';\r\nimport {\r\n  EVENT_AUTOPLAY_PAUSE,\r\n  EVENT_AUTOPLAY_PLAY,\r\n  EVENT_AUTOPLAY_PLAYING,\r\n  EVENT_MOVE,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLL,\r\n} from '../../constants/events';\r\nimport { EventInterface, RequestInterval } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { getAttribute, setAttribute, style, toggleClass } from '../../utils';\r\nimport { INTERVAL_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Autoplay component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface AutoplayComponent extends BaseComponent {\r\n  play(): void;\r\n  pause(): void;\r\n  isPaused(): boolean;\r\n}\r\n\r\n/**\r\n * The component for auto playing sliders.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An Autoplay component object.\r\n */\r\nexport function Autoplay( Splide: Splide, Components: Components, options: Options ): AutoplayComponent {\r\n  const { on, bind, emit } = EventInterface( Splide );\r\n  const interval = RequestInterval( options.interval, Splide.go.bind( Splide, '>' ), onAnimationFrame );\r\n  const { isPaused } = interval;\r\n  const { Elements, Elements: { root, toggle } } = Components;\r\n  const { autoplay } = options;\r\n\r\n  /**\r\n   * Indicates whether the slider is hovered or not.\r\n   */\r\n  let hovered: boolean;\r\n\r\n  /**\r\n   * Indicates whether one of slider elements has focus or not.\r\n   */\r\n  let focused: boolean;\r\n\r\n  /**\r\n   * Indicates whether the autoplay is stopped or not.\r\n   * If stopped, autoplay won't start automatically unless `play()` is explicitly called.\r\n   */\r\n  let stopped = autoplay === 'pause';\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( autoplay ) {\r\n      listen();\r\n      toggle && setAttribute( toggle, ARIA_CONTROLS, Elements.track.id );\r\n      stopped || play();\r\n      update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens to some events.\r\n   */\r\n  function listen(): void {\r\n    if ( options.pauseOnHover ) {\r\n      bind( root, 'mouseenter mouseleave', e => {\r\n        hovered = e.type === 'mouseenter';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    if ( options.pauseOnFocus ) {\r\n      bind( root, 'focusin focusout', e => {\r\n        focused = e.type === 'focusin';\r\n        autoToggle();\r\n      } );\r\n    }\r\n\r\n    if ( toggle ) {\r\n      bind( toggle, 'click', () => {\r\n        stopped ? play() : pause( true );\r\n      } );\r\n    }\r\n\r\n    on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_REFRESH ], interval.rewind );\r\n    on( EVENT_MOVE, onMove );\r\n  }\r\n\r\n  /**\r\n   * Starts autoplay and clears all flags.\r\n   */\r\n  function play(): void {\r\n    if ( isPaused() && Components.Slides.isEnough() ) {\r\n      interval.start( ! options.resetProgress );\r\n      focused = hovered = stopped = false;\r\n      update();\r\n      emit( EVENT_AUTOPLAY_PLAY );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Pauses autoplay.\r\n   *\r\n   * @param stop - If `true`, autoplay keeps paused until `play()` is explicitly called.\r\n   */\r\n  function pause( stop = true ): void {\r\n    stopped = !! stop;\r\n    update();\r\n\r\n    if ( ! isPaused() ) {\r\n      interval.pause();\r\n      emit( EVENT_AUTOPLAY_PAUSE );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Toggles play/pause according to current flags.\r\n   * If autoplay is manually paused, this will do nothing.\r\n   */\r\n  function autoToggle(): void {\r\n    if ( ! stopped ) {\r\n      hovered || focused ? pause( false ) : play();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the toggle button status.\r\n   */\r\n  function update(): void {\r\n    if ( toggle ) {\r\n      toggleClass( toggle, CLASS_ACTIVE, ! stopped );\r\n      setAttribute( toggle, ARIA_LABEL, options.i18n[ stopped ? 'play' : 'pause' ] );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called on every animation frame while autoplay is active.\r\n   *\r\n   * @param rate - The progress rate between 0 to 1.\r\n   */\r\n  function onAnimationFrame( rate: number ): void {\r\n    const { bar } = Elements;\r\n    bar && style( bar, 'width', `${ rate * 100 }%` );\r\n    emit( EVENT_AUTOPLAY_PLAYING, rate );\r\n  }\r\n\r\n  /**\r\n   * Updates or restores the interval duration.\r\n   *\r\n   * @param index - An index to move to.\r\n   */\r\n  function onMove( index: number ): void {\r\n    const Slide = Components.Slides.getAt( index );\r\n    interval.set( Slide && +getAttribute( Slide.slide, INTERVAL_DATA_ATTRIBUTE ) || options.interval );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: interval.cancel,\r\n    play,\r\n    pause,\r\n    isPaused,\r\n  };\r\n}\r\n","import { EVENT_LAZYLOAD_LOADED, EVENT_MOUNTED, EVENT_REFRESH, EVENT_UPDATED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { apply, child, display } from '../../utils';\r\nimport { SlideComponent } from '../Slides/Slide';\r\n\r\n\r\n/**\r\n * The interface for the Cover component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface CoverComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for setting the image as the slide background.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Cover component object.\r\n */\r\nexport function Cover( Splide: Splide, Components: Components, options: Options ): CoverComponent {\r\n  const { on } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.cover ) {\r\n      on( EVENT_LAZYLOAD_LOADED, apply( toggle, true ) );\r\n      on( [ EVENT_MOUNTED, EVENT_UPDATED, EVENT_REFRESH ], apply( cover, true ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets/removes the background image to/from all slides.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   */\r\n  function cover( cover: boolean ): void {\r\n    Components.Slides.forEach( Slide => {\r\n      const img = child<HTMLImageElement>( Slide.container || Slide.slide, 'img' );\r\n\r\n      if ( img && img.src ) {\r\n        toggle( cover, img, Slide );\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Sets/removes the background image to/from the parent element.\r\n   *\r\n   * @param cover - If `false`, removes the background image.\r\n   * @param img   - A target image element.\r\n   * @param Slide - A SlideComponent object where the image belongs.\r\n   */\r\n  function toggle( cover: boolean, img: HTMLImageElement, Slide: SlideComponent ): void {\r\n    Slide.style( 'background', cover ? `center/cover no-repeat url(\"${ img.src }\")` : '', true );\r\n    display( img, cover ? 'none' : '' );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: apply( cover, false ),\r\n  };\r\n}\r\n","import { EVENT_MOVE, EVENT_REFRESH, EVENT_SCROLL, EVENT_SCROLLED, EVENT_UPDATED } from '../../constants/events';\r\nimport { IDLE, SCROLLING } from '../../constants/states';\r\nimport { SLIDE } from '../../constants/types';\r\nimport { EventInterface, RequestInterval, RequestIntervalInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { AnyFunction, BaseComponent, Components, Options } from '../../types';\r\nimport { abs, apply, approximatelyEqual, floor, max, sign } from '../../utils';\r\nimport { BASE_VELOCITY, BOUNCE_DIFF_THRESHOLD, BOUNCE_DURATION, FRICTION_FACTOR, MIN_DURATION } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Scroll component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface ScrollComponent extends BaseComponent {\r\n  scroll( position: number, duration?: number, snap?: boolean, callback?: AnyFunction ): void;\r\n  cancel(): void;\r\n}\r\n\r\n/**\r\n * The component for scrolling the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Scroll component object.\r\n */\r\nexport function Scroll( Splide: Splide, Components: Components, options: Options ): ScrollComponent {\r\n  const { on, emit } = EventInterface( Splide );\r\n  const { state: { set } } = Splide;\r\n  const { Move } = Components;\r\n  const { getPosition, getLimit, exceededLimit, translate } = Move;\r\n\r\n  /**\r\n   * Retains the active RequestInterval object.\r\n   */\r\n  let interval: RequestIntervalInterface;\r\n\r\n  /**\r\n   * Holds the callback function.\r\n   */\r\n  let callback: AnyFunction;\r\n\r\n  /**\r\n   * The current friction (<= 1).\r\n   */\r\n  let friction = 1;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    on( EVENT_MOVE, clear );\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], cancel );\r\n  }\r\n\r\n  /**\r\n   * Scrolls the slider to the provided destination.\r\n   *\r\n   * @param destination - The destination to scroll the slider to.\r\n   * @param duration    - Optional. The scroll duration. If omitted, calculates it by the distance.\r\n   * @param snap        - Optional. Whether to snap the slider to the closest slide or not.\r\n   * @param onScrolled  - Optional. A callback invoked after scroll ends.\r\n   * @param noConstrain - Optional. Whether to suppress constraint process when the slider exceeds bounds.\r\n   */\r\n  function scroll(\r\n    destination: number,\r\n    duration?: number,\r\n    snap?: boolean,\r\n    onScrolled?: AnyFunction,\r\n    noConstrain?: boolean\r\n  ): void {\r\n    const from = getPosition();\r\n\r\n    clear();\r\n\r\n    if ( snap ) {\r\n      const size   = Components.Layout.sliderSize();\r\n      const offset = sign( destination ) * size * floor( abs( destination ) / size ) || 0;\r\n      destination = Move.toPosition( Components.Controller.toDest( destination % size ) ) + offset;\r\n    }\r\n\r\n    const noDistance = approximatelyEqual( from, destination, 1 );\r\n\r\n    friction = 1;\r\n    duration = noDistance ? 0 : duration || max( abs( destination - from ) / BASE_VELOCITY, MIN_DURATION );\r\n    callback = onScrolled;\r\n    interval = RequestInterval( duration, onEnd, apply( update, from, destination, noConstrain ), 1 );\r\n\r\n    set( SCROLLING );\r\n    emit( EVENT_SCROLL );\r\n    interval.start();\r\n  }\r\n\r\n  /**\r\n   * Called when scroll ends or has been just canceled.\r\n   */\r\n  function onEnd(): void {\r\n    set( IDLE );\r\n    callback && callback();\r\n    emit( EVENT_SCROLLED );\r\n  }\r\n\r\n  /**\r\n   * Called whenever the interval timer is updated.\r\n   *\r\n   * @param from        - A position where scroll starts.\r\n   * @param to          - A destination where the slider goes.\r\n   * @param noConstrain - Whether to suppress constraint process when the slider exceeds bounds.\r\n   * @param rate        - A current rate.\r\n   */\r\n  function update( from: number, to: number, noConstrain: boolean | undefined, rate: number ): void {\r\n    const position = getPosition();\r\n    const target   = from + ( to - from ) * easing( rate );\r\n    const diff     = ( target - position ) * friction;\r\n\r\n    translate( position + diff );\r\n\r\n    if ( Splide.is( SLIDE ) && ! noConstrain && exceededLimit() ) {\r\n      friction *= FRICTION_FACTOR;\r\n\r\n      if ( abs( diff ) < BOUNCE_DIFF_THRESHOLD ) {\r\n        scroll( getLimit( exceededLimit( true ) ), BOUNCE_DURATION, false, undefined, true );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clears the active interval.\r\n   */\r\n  function clear(): void {\r\n    if ( interval ) {\r\n      interval.cancel();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the active interval and emits the `scrolled` event.\r\n   */\r\n  function cancel(): void {\r\n    if ( interval && ! interval.isPaused() ) {\r\n      clear();\r\n      onEnd();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The easing function.\r\n   *\r\n   * @param t - A value to ease.\r\n   *\r\n   * @return An eased value.\r\n   */\r\n  function easing( t: number ): number {\r\n    const { easingFunc } = options;\r\n    return easingFunc ? easingFunc( t ) : 1 - Math.pow( 1 - t, 4 );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: clear,\r\n    scroll,\r\n    cancel,\r\n  };\r\n}\r\n","/**\r\n * Triggers the bounce effect when the diff becomes less than this value.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DIFF_THRESHOLD = 10;\r\n\r\n/**\r\n * The duration of the bounce effect.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BOUNCE_DURATION = 600;\r\n\r\n/**\r\n * The friction factor.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const FRICTION_FACTOR = 0.6;\r\n\r\n/**\r\n * The velocity to calculate the scroll duration.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const BASE_VELOCITY = 1.5;\r\n\r\n/**\r\n * The minimum duration of scroll.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const MIN_DURATION = 800;\r\n","import { CLASS_ARROW, CLASS_PAGINATION_PAGE } from '../../constants/classes';\r\nimport { EVENT_DRAG, EVENT_DRAGGED, EVENT_DRAGGING, EVENT_MOUNTED, EVENT_UPDATED } from '../../constants/events';\r\nimport { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { DRAGGING, IDLE, MOVING, SCROLLING } from '../../constants/states';\r\nimport { FADE, LOOP, SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, isObject, matches, min, noop, prevent, sign, timeOf } from '../../utils';\r\nimport { FRICTION, LOG_INTERVAL, POINTER_DOWN_EVENTS, POINTER_MOVE_EVENTS, POINTER_UP_EVENTS } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the Drag component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface DragComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n  isDragging(): boolean;\r\n}\r\n\r\n/**\r\n * The component for dragging the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Drag component object.\r\n */\r\nexport function Drag( Splide: Splide, Components: Components, options: Options ): DragComponent {\r\n  const { on, emit, bind, unbind } = EventInterface( Splide );\r\n  const { state } = Splide;\r\n  const { Move, Scroll, Controller, Elements: { track }, Media: { reduce } } = Components;\r\n  const { resolve, orient } = Components.Direction;\r\n  const { getPosition, exceededLimit } = Move;\r\n\r\n  /**\r\n   * The base slider position to calculate the delta of coords.\r\n   */\r\n  let basePosition: number;\r\n\r\n  /**\r\n   * The base event object saved per specific sampling interval.\r\n   */\r\n  let baseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Holds the previous base event object.\r\n   */\r\n  let prevBaseEvent: TouchEvent | MouseEvent;\r\n\r\n  /**\r\n   * Indicates whether the drag mode is `free` or not.\r\n   */\r\n  let isFree: boolean;\r\n\r\n  /**\r\n   * Indicates whether the user is dragging the slider or not.\r\n   */\r\n  let dragging: boolean;\r\n\r\n  /**\r\n   * Indicates whether the slider exceeds limits or not.\r\n   * This must not be `undefined` for strict comparison.\r\n   */\r\n  let exceeded = false;\r\n\r\n  /**\r\n   * Turns into `true` when the user starts dragging the slider.\r\n   */\r\n  let clickPrevented: boolean;\r\n\r\n  /**\r\n   * Indicates whether the drag component is now disabled or not.\r\n   */\r\n  let disabled: boolean;\r\n\r\n  /**\r\n   * The target element to attach listeners.\r\n   */\r\n  let target: Window | HTMLElement;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    bind( track, POINTER_MOVE_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_UP_EVENTS, noop, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, POINTER_DOWN_EVENTS, onPointerDown, SCROLL_LISTENER_OPTIONS );\r\n    bind( track, 'click', onClick, { capture: true } );\r\n    bind( track, 'dragstart', prevent );\r\n    on( [ EVENT_MOUNTED, EVENT_UPDATED ], init );\r\n  }\r\n\r\n  /**\r\n   * Initializes the component.\r\n   */\r\n  function init(): void {\r\n    const { drag } = options;\r\n    disable( ! drag );\r\n    isFree = drag === 'free';\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks or touches the slider.\r\n   * - Needs to prevent the default behaviour when the slider is busy to deny any action, such as dragging images\r\n   * - IE does not support MouseEvent and TouchEvent constructors\r\n   * - The `dragging` state always becomes `true` when the user starts dragging while the slider is moving\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerDown( e: TouchEvent | MouseEvent ): void {\r\n    clickPrevented = false;\r\n\r\n    if ( ! disabled ) {\r\n      const isTouch = isTouchEvent( e );\r\n\r\n      if ( isDraggable( e.target ) && ( isTouch || ! e.button ) ) {\r\n        if ( ! Controller.isBusy() ) {\r\n          target        = isTouch ? track : window;\r\n          dragging      = state.is( [ MOVING, SCROLLING ] );\r\n          prevBaseEvent = null;\r\n\r\n          bind( target, POINTER_MOVE_EVENTS, onPointerMove, SCROLL_LISTENER_OPTIONS );\r\n          bind( target, POINTER_UP_EVENTS, onPointerUp, SCROLL_LISTENER_OPTIONS );\r\n          Move.cancel();\r\n          Scroll.cancel();\r\n          save( e );\r\n        } else {\r\n          prevent( e, true );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called while the user moves the pointer on the slider.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerMove( e: TouchEvent | MouseEvent ): void {\r\n    if ( ! state.is( DRAGGING ) ) {\r\n      state.set( DRAGGING );\r\n      emit( EVENT_DRAG );\r\n    }\r\n\r\n    if ( e.cancelable ) {\r\n      if ( dragging ) {\r\n        Move.translate( basePosition + constrain( diffCoord( e ) ) );\r\n\r\n        const expired     = diffTime( e ) > LOG_INTERVAL;\r\n        const hasExceeded = exceeded !== ( exceeded = exceededLimit() );\r\n\r\n        if ( expired || hasExceeded ) {\r\n          save( e );\r\n        }\r\n\r\n        clickPrevented = true;\r\n        emit( EVENT_DRAGGING );\r\n        prevent( e );\r\n      } else if ( isSliderDirection( e ) ) {\r\n        dragging = shouldStart( e );\r\n        prevent( e );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user releases pointing devices.\r\n   * Needs to move the slider when:\r\n   * - The user drags the slider and the distance exceeds the threshold\r\n   * - The user aborted the slider moving by pointerdown and just released it without dragging the slider\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function onPointerUp( e: TouchEvent | MouseEvent ): void {\r\n    if ( state.is( DRAGGING ) ) {\r\n      state.set( IDLE );\r\n      emit( EVENT_DRAGGED );\r\n    }\r\n\r\n    if ( dragging ) {\r\n      move( e );\r\n      prevent( e );\r\n    }\r\n\r\n    unbind( target, POINTER_MOVE_EVENTS, onPointerMove );\r\n    unbind( target, POINTER_UP_EVENTS, onPointerUp );\r\n    dragging = false;\r\n  }\r\n\r\n  /**\r\n   * Called when the track element is clicked.\r\n   * Disables click any elements inside it while dragging.\r\n   *\r\n   * @param e - A MouseEvent object.\r\n   */\r\n  function onClick( e: MouseEvent ): void {\r\n    if ( ! disabled && clickPrevented ) {\r\n      prevent( e, true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Saves data at the specific moment.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   */\r\n  function save( e: TouchEvent | MouseEvent ): void {\r\n    prevBaseEvent = baseEvent;\r\n    baseEvent     = e;\r\n    basePosition  = getPosition();\r\n  }\r\n\r\n  /**\r\n   * Calculates the destination by the drag velocity and moves the carousel.\r\n   * If motion is reduced, restores transition speed to the initial value\r\n   * because it's \"essential\" motion for the user to recognize what happens on the carousel.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   */\r\n  function move( e: TouchEvent | MouseEvent ): void {\r\n    const velocity    = computeVelocity( e );\r\n    const destination = computeDestination( velocity );\r\n    const rewind      = options.rewind && options.rewindByDrag;\r\n\r\n    reduce( false );\r\n\r\n    if ( isFree ) {\r\n      Controller.scroll( destination, 0, options.snap );\r\n    } else if ( Splide.is( FADE ) ) {\r\n      Controller.go( orient( sign( velocity ) ) < 0 ? ( rewind ? '<' : '-' ) : ( rewind ? '>' : '+' ) );\r\n    } else if ( Splide.is( SLIDE ) && exceeded && rewind ) {\r\n      Controller.go( exceededLimit( true ) ? '>' : '<' );\r\n    } else {\r\n      Controller.go( Controller.toDest( destination ), true );\r\n    }\r\n\r\n    reduce( true );\r\n  }\r\n\r\n  /**\r\n   * Checks if the drag distance exceeds the defined threshold.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return `true` if the distance exceeds the threshold, or `false` if not.\r\n   */\r\n  function shouldStart( e: TouchEvent | MouseEvent ): boolean {\r\n    const { dragMinThreshold: thresholds } = options;\r\n    const isObj = isObject( thresholds );\r\n    const mouse = isObj && thresholds.mouse || 0;\r\n    const touch = ( isObj ? thresholds.touch : +thresholds ) || 10;\r\n    return abs( diffCoord( e ) ) > ( isTouchEvent( e ) ? touch : mouse );\r\n  }\r\n\r\n  /**\r\n   * Checks whether dragging towards the slider or the scroll direction.\r\n   *\r\n   * @return `true` if dragging towards the slider direction, or otherwise `false`.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   */\r\n  function isSliderDirection( e: TouchEvent | MouseEvent ): boolean {\r\n    return abs( diffCoord( e ) ) > abs( diffCoord( e, true ) );\r\n  }\r\n\r\n  /**\r\n   * Computes the drag velocity.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object\r\n   *\r\n   * @return The drag velocity.\r\n   */\r\n  function computeVelocity( e: TouchEvent | MouseEvent ): number {\r\n    if ( Splide.is( LOOP ) || ! exceeded ) {\r\n      const time = diffTime( e );\r\n\r\n      if ( time && time < LOG_INTERVAL ) {\r\n        return diffCoord( e ) / time;\r\n      }\r\n    }\r\n\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Computes the destination by the velocity and the `flickPower` option.\r\n   *\r\n   * @param velocity - The drag velocity.\r\n   *\r\n   * @return The destination.\r\n   */\r\n  function computeDestination( velocity: number ): number {\r\n    return getPosition() + sign( velocity ) * min(\r\n      abs( velocity ) * ( options.flickPower || 600 ),\r\n      isFree ? Infinity : Components.Layout.listSize() * ( options.flickMaxPages || 1 )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Returns the coord difference between the provided and base events.\r\n   *\r\n   * @param e          - A TouchEvent or MouseEvent object.\r\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\r\n   *\r\n   * @return The difference of the coord.\r\n   */\r\n  function diffCoord( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\r\n    return coordOf( e, orthogonal ) - coordOf( getBaseEvent( e ), orthogonal );\r\n  }\r\n\r\n  /**\r\n   * Returns the elapsed time from the base event to `e`.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return The elapsed time in milliseconds.\r\n   */\r\n  function diffTime( e: TouchEvent | MouseEvent ): number {\r\n    return timeOf( e ) - timeOf( getBaseEvent( e ) );\r\n  }\r\n\r\n  /**\r\n   * Returns the base event.\r\n   * If the base event is same with `e`, returns previous one.\r\n   *\r\n   * @param e - A TouchEvent or MouseEvent object.\r\n   *\r\n   * @return A base event.\r\n   */\r\n  function getBaseEvent( e: TouchEvent | MouseEvent ): TouchEvent | MouseEvent {\r\n    return baseEvent === e && prevBaseEvent || baseEvent;\r\n  }\r\n\r\n  /**\r\n   * Returns the `pageX` and `pageY` coordinates provided by the event.\r\n   * Be aware that IE does not support both TouchEvent and MouseEvent constructors.\r\n   *\r\n   * @param e          - A TouchEvent or MouseEvent object.\r\n   * @param orthogonal - Optional. If `true`, returns the coord of the orthogonal axis against the drag one.\r\n   *\r\n   * @return A pageX or pageY coordinate.\r\n   */\r\n  function coordOf( e: TouchEvent | MouseEvent, orthogonal?: boolean ): number {\r\n    return ( isTouchEvent( e ) ? e.changedTouches[ 0 ] : e )[ `page${ resolve( orthogonal ? 'Y' : 'X' ) }` ];\r\n  }\r\n\r\n  /**\r\n   * Reduces the distance to move by the predefined friction.\r\n   * This does nothing when the slider type is not `slide`, or the position is inside borders.\r\n   *\r\n   * @param diff - Diff to constrain.\r\n   *\r\n   * @return The constrained diff.\r\n   */\r\n  function constrain( diff: number ): number {\r\n    return diff / ( exceeded && Splide.is( SLIDE ) ? FRICTION : 1 );\r\n  }\r\n\r\n  /**\r\n   * Returns `true` if the user can drag the target.\r\n   *\r\n   * @param target - An event target.\r\n   *\r\n   * @return `true` if the target is draggable.\r\n   */\r\n  function isDraggable( target: EventTarget ): boolean {\r\n    const { noDrag } = options;\r\n\r\n    return ! matches( target, `.${ CLASS_PAGINATION_PAGE }, .${ CLASS_ARROW }` )\r\n      && ( ! noDrag || ! matches( target, noDrag ) );\r\n  }\r\n\r\n  /**\r\n   * Checks if the provided event is TouchEvent or MouseEvent.\r\n   *\r\n   * @param e - An event to check.\r\n   *\r\n   * @return `true` if the `e` is TouchEvent.\r\n   */\r\n  function isTouchEvent( e: TouchEvent | MouseEvent ): e is TouchEvent {\r\n    return typeof TouchEvent !== 'undefined' && e instanceof TouchEvent;\r\n  }\r\n\r\n  /**\r\n   * Checks if now the user is dragging the slider or not.\r\n   *\r\n   * @return `true` if the user is dragging the slider or otherwise `false`.\r\n   */\r\n  function isDragging(): boolean {\r\n    return dragging;\r\n  }\r\n\r\n  /**\r\n   * Disables the component.\r\n   *\r\n   * @param value - Set `true` to disable the component.\r\n   */\r\n  function disable( value: boolean ): void {\r\n    disabled = value;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    disable,\r\n    isDragging,\r\n  };\r\n}\r\n","import { CLASS_LOADING } from '../../constants/classes';\r\nimport {\r\n  EVENT_LAZYLOAD_LOADED,\r\n  EVENT_MOUNTED,\r\n  EVENT_MOVED,\r\n  EVENT_REFRESH,\r\n  EVENT_RESIZE,\r\n  EVENT_SCROLLED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  apply,\r\n  child,\r\n  create,\r\n  display,\r\n  empty,\r\n  getAttribute,\r\n  queryAll,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n} from '../../utils';\r\nimport { SlideComponent } from '../Slides/Slide';\r\nimport { IMAGE_SELECTOR, SRC_DATA_ATTRIBUTE, SRCSET_DATA_ATTRIBUTE } from './constants';\r\n\r\n\r\n/**\r\n * The interface for the LazyLoad component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface LazyLoadComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The type for each entry.\r\n * Use tuple for better compression.\r\n *\r\n * @since 4.0.0\r\n */\r\ntype LazyLoadEntry = [ HTMLImageElement, SlideComponent, HTMLSpanElement ];\r\n\r\n/**\r\n * The component for lazily loading images.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return An LazyLoad component object.\r\n */\r\nexport function LazyLoad( Splide: Splide, Components: Components, options: Options ): LazyLoadComponent {\r\n  const { on, off, bind, emit } = EventInterface( Splide );\r\n  const isSequential = options.lazyLoad === 'sequential';\r\n  const events       = [ EVENT_MOUNTED, EVENT_REFRESH, EVENT_MOVED, EVENT_SCROLLED ];\r\n\r\n  /**\r\n   * Stores data of images.\r\n   */\r\n  let entries: LazyLoadEntry[] = [];\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.lazyLoad ) {\r\n      init();\r\n      on( EVENT_REFRESH, init );\r\n      isSequential || on( events, observe );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finds images to register entries.\r\n   * Note that spinner can be already available because of `refresh()`.\r\n   */\r\n  function init() {\r\n    empty( entries );\r\n\r\n    Components.Slides.forEach( Slide => {\r\n      queryAll<HTMLImageElement>( Slide.slide, IMAGE_SELECTOR ).forEach( img => {\r\n        const src    = getAttribute( img, SRC_DATA_ATTRIBUTE );\r\n        const srcset = getAttribute( img, SRCSET_DATA_ATTRIBUTE );\r\n\r\n        if ( src !== img.src || srcset !== img.srcset ) {\r\n          const className = options.classes.spinner;\r\n          const parent    = img.parentElement;\r\n          const spinner   = child( parent, `.${ className }` ) || create( 'span', className, parent );\r\n\r\n          entries.push( [ img, Slide, spinner ] );\r\n          img.src || display( img, 'none' );\r\n        }\r\n      } );\r\n    } );\r\n\r\n    isSequential && loadNext();\r\n  }\r\n\r\n  /**\r\n   * Checks how close each image is from the active slide, and determines whether to start loading or not.\r\n   * The last `+1` is for the current page.\r\n   */\r\n  function observe(): void {\r\n    entries = entries.filter( data => {\r\n      const distance = options.perPage * ( ( options.preloadPages || 1 ) + 1 ) - 1;\r\n      return data[ 1 ].isWithin( Splide.index, distance ) ? load( data ) : true;\r\n    } );\r\n\r\n    entries.length || off( events );\r\n  }\r\n\r\n  /**\r\n   * Starts loading the image in the data.\r\n   *\r\n   * @param data - A LazyLoadEntry object.\r\n   */\r\n  function load( data: LazyLoadEntry ): void {\r\n    const [ img ] = data;\r\n\r\n    addClass( data[ 1 ].slide, CLASS_LOADING );\r\n    bind( img, 'load error', apply( onLoad, data ) );\r\n\r\n    setAttribute( img, 'src', getAttribute( img, SRC_DATA_ATTRIBUTE ) );\r\n    setAttribute( img, 'srcset', getAttribute( img, SRCSET_DATA_ATTRIBUTE ) );\r\n    removeAttribute( img, SRC_DATA_ATTRIBUTE );\r\n    removeAttribute( img, SRCSET_DATA_ATTRIBUTE );\r\n  }\r\n\r\n  /**\r\n   * Called when the image is loaded or any error occurs.\r\n   *\r\n   * @param data - A LazyLoadEntry object.\r\n   * @param e    - An Event object.\r\n   */\r\n  function onLoad( data: LazyLoadEntry, e: Event ): void {\r\n    const [ img, Slide ] = data;\r\n\r\n    removeClass( Slide.slide, CLASS_LOADING );\r\n\r\n    if ( e.type !== 'error' ) {\r\n      remove( data[ 2 ] );\r\n      display( img, '' );\r\n      emit( EVENT_LAZYLOAD_LOADED, img, Slide );\r\n      emit( EVENT_RESIZE );\r\n    }\r\n\r\n    isSequential && loadNext();\r\n  }\r\n\r\n  /**\r\n   * Starts loading a next image.\r\n   */\r\n  function loadNext(): void {\r\n    entries.length && load( entries.shift() );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    destroy: apply( empty, entries ),\r\n  };\r\n}\r\n","import { ARROW_LEFT, ARROW_RIGHT } from '../../constants/arrows';\r\nimport {\r\n  ARIA_CONTROLS,\r\n  ARIA_LABEL,\r\n  ARIA_ORIENTATION,\r\n  ARIA_SELECTED,\r\n  ROLE,\r\n  TAB_INDEX,\r\n} from '../../constants/attributes';\r\nimport { CLASS_ACTIVE, CLASS_PAGINATION } from '../../constants/classes';\r\nimport { TTB } from '../../constants/directions';\r\nimport {\r\n  EVENT_MOVE,\r\n  EVENT_PAGINATION_MOUNTED,\r\n  EVENT_PAGINATION_UPDATED,\r\n  EVENT_REFRESH,\r\n  EVENT_SCROLL,\r\n  EVENT_SCROLLED,\r\n  EVENT_UPDATED,\r\n} from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport {\r\n  addClass,\r\n  apply,\r\n  ceil,\r\n  create,\r\n  empty,\r\n  focus,\r\n  format,\r\n  prevent,\r\n  remove,\r\n  removeAttribute,\r\n  removeClass,\r\n  setAttribute,\r\n  slice,\r\n} from '../../utils';\r\nimport { normalizeKey } from '../../utils/dom/normalizeKey/normalizeKey';\r\n\r\n\r\n/**\r\n * The interface for the Pagination component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationComponent extends BaseComponent {\r\n  items: PaginationItem[];\r\n  getAt( index: number ): PaginationItem;\r\n  update(): void;\r\n}\r\n\r\n/**\r\n * The interface for data of the pagination.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationData {\r\n  list: HTMLUListElement;\r\n  items: PaginationItem[];\r\n}\r\n\r\n/**\r\n * The interface for each pagination item.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface PaginationItem {\r\n  li: HTMLLIElement;\r\n  button: HTMLButtonElement;\r\n  page: number;\r\n}\r\n\r\n/**\r\n * The component for the pagination UI (a slide picker).\r\n *\r\n * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#grouped-carousel-elements\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Pagination component object.\r\n */\r\nexport function Pagination( Splide: Splide, Components: Components, options: Options ): PaginationComponent {\r\n  const event = EventInterface( Splide );\r\n  const { on, emit, bind } = event;\r\n  const { Slides, Elements, Controller } = Components;\r\n  const { hasFocus, getIndex, go } = Controller;\r\n  const { resolve } = Components.Direction;\r\n\r\n  /**\r\n   * Stores all pagination items.\r\n   */\r\n  const items: PaginationItem[] = [];\r\n\r\n  /**\r\n   * The pagination element.\r\n   */\r\n  let list: HTMLUListElement | null;\r\n\r\n  /**\r\n   * Holds modifier classes.\r\n   */\r\n  let paginationClasses: string;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    destroy();\r\n\r\n    on( [ EVENT_UPDATED, EVENT_REFRESH ], mount );\r\n\r\n    if ( options.pagination && Slides.isEnough() ) {\r\n      on( [ EVENT_MOVE, EVENT_SCROLL, EVENT_SCROLLED ], update );\r\n      createPagination();\r\n      update();\r\n      emit( EVENT_PAGINATION_MOUNTED, { list, items }, getAt( Splide.index ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    if ( list ) {\r\n      remove( Elements.pagination ? slice( list.children ) : list );\r\n      removeClass( list, paginationClasses );\r\n      empty( items );\r\n      list = null;\r\n    }\r\n\r\n    event.destroy();\r\n  }\r\n\r\n  /**\r\n   * Creates the pagination element and appends it to the slider.\r\n   */\r\n  function createPagination(): void {\r\n    const { length } = Splide;\r\n    const { classes, i18n, perPage } = options;\r\n    const max = hasFocus() ? length : ceil( length / perPage );\r\n\r\n    list = Elements.pagination || create( 'ul', classes.pagination, Elements.track.parentElement );\r\n\r\n    addClass( list, ( paginationClasses = `${ CLASS_PAGINATION }--${ getDirection() }` ) );\r\n    setAttribute( list, ROLE, 'tablist' );\r\n    setAttribute( list, ARIA_LABEL, i18n.select );\r\n    setAttribute( list, ARIA_ORIENTATION, getDirection() === TTB ? 'vertical' : '' );\r\n\r\n    for ( let i = 0; i < max; i++ ) {\r\n      const li       = create( 'li', null, list );\r\n      const button   = create( 'button', { class: classes.page, type: 'button' }, li );\r\n      const controls = Slides.getIn( i ).map( Slide => Slide.slide.id );\r\n      const text     = ! hasFocus() && perPage > 1 ? i18n.pageX : i18n.slideX;\r\n\r\n      bind( button, 'click', apply( onClick, i ) );\r\n\r\n      if ( options.paginationKeyboard ) {\r\n        bind( button, 'keydown', apply( onKeydown, i ) );\r\n      }\r\n\r\n      setAttribute( li, ROLE, 'presentation' );\r\n      setAttribute( button, ROLE, 'tab' );\r\n      setAttribute( button, ARIA_CONTROLS, controls.join( ' ' ) );\r\n      setAttribute( button, ARIA_LABEL, format( text, i + 1 ) );\r\n      setAttribute( button, TAB_INDEX, -1 );\r\n\r\n      items.push( { li, button, page: i } );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user clicks each pagination dot.\r\n   * Moves the focus to the active slide for accessibility.\r\n   *\r\n   * @link https://www.w3.org/WAI/tutorials/carousels/functionality/\r\n   *\r\n   * @param page - A clicked page index.\r\n   */\r\n  function onClick( page: number ): void {\r\n    go( `>${ page }`, true );\r\n  }\r\n\r\n  /**\r\n   * Called when any key is pressed on the pagination.\r\n   *\r\n   * @link https://www.w3.org/TR/2021/NOTE-wai-aria-practices-1.2-20211129/#keyboard-interaction-21\r\n   *\r\n   * @param page - A page index.\r\n   * @param e    - A KeyboardEvent object.\r\n   */\r\n  function onKeydown( page: number, e: KeyboardEvent ): void {\r\n    const { length } = items;\r\n    const key = normalizeKey( e );\r\n    const dir = getDirection();\r\n\r\n    let nextPage = -1;\r\n\r\n    if ( key === resolve( ARROW_RIGHT, false, dir ) ) {\r\n      nextPage = ++page % length;\r\n    } else if ( key === resolve( ARROW_LEFT, false, dir ) ) {\r\n      nextPage = ( --page + length ) % length;\r\n    } else if ( key === 'Home' ) {\r\n      nextPage = 0;\r\n    } else if ( key === 'End' ) {\r\n      nextPage = length - 1;\r\n    }\r\n\r\n    const item = items[ nextPage ];\r\n\r\n    if ( item ) {\r\n      focus( item.button );\r\n      go( `>${ nextPage }` );\r\n      prevent( e, true );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the latest direction for pagination.\r\n   */\r\n  function getDirection(): Options['direction'] {\r\n    return options.paginationDirection || options.direction;\r\n  }\r\n\r\n  /**\r\n   * Returns the pagination item at the specified index.\r\n   *\r\n   * @param index - An index.\r\n   *\r\n   * @return A pagination item object if available, or otherwise `undefined`.\r\n   */\r\n  function getAt( index: number ): PaginationItem | undefined {\r\n    return items[ Controller.toPage( index ) ];\r\n  }\r\n\r\n  /**\r\n   * Updates the pagination status.\r\n   */\r\n  function update(): void {\r\n    const prev = getAt( getIndex( true ) );\r\n    const curr = getAt( getIndex() );\r\n\r\n    if ( prev ) {\r\n      const { button } = prev;\r\n      removeClass( button, CLASS_ACTIVE );\r\n      removeAttribute( button, ARIA_SELECTED );\r\n      setAttribute( button, TAB_INDEX, -1 );\r\n    }\r\n\r\n    if ( curr ) {\r\n      const { button } = curr;\r\n      addClass( button, CLASS_ACTIVE );\r\n      setAttribute( button, ARIA_SELECTED, true );\r\n      setAttribute( button, TAB_INDEX, '' );\r\n    }\r\n\r\n    emit( EVENT_PAGINATION_UPDATED, { list, items }, prev, curr );\r\n  }\r\n\r\n  return {\r\n    items,\r\n    mount,\r\n    destroy,\r\n    getAt,\r\n    update,\r\n  };\r\n}\r\n","import { SCROLL_LISTENER_OPTIONS } from '../../constants/listener-options';\r\nimport { MOVING } from '../../constants/states';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { abs, prevent, timeOf } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Wheel component.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport interface WheelComponent extends BaseComponent {\r\n}\r\n\r\n/**\r\n * The component for observing the mouse wheel and moving the slider.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Wheel component object.\r\n */\r\nexport function Wheel( Splide: Splide, Components: Components, options: Options ): WheelComponent {\r\n  const { bind } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Holds the last time when the wheel moves the slider.\r\n   */\r\n  let lastTime = 0;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    if ( options.wheel ) {\r\n      bind( Components.Elements.track, 'wheel', onWheel, SCROLL_LISTENER_OPTIONS );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Called when the user rotates the mouse wheel on the slider.\r\n   *\r\n   * @param e - A WheelEvent object.\r\n   */\r\n  function onWheel( e: WheelEvent ): void {\r\n    if ( e.cancelable ) {\r\n      const { deltaY } = e;\r\n      const backwards = deltaY < 0;\r\n      const timeStamp = timeOf( e );\r\n      const min       = options.wheelMinThreshold || 0;\r\n      const sleep     = options.wheelSleep || 0;\r\n\r\n      if ( abs( deltaY ) > min && timeStamp - lastTime > sleep ) {\r\n        Splide.go( backwards ? '<' : '>' );\r\n        lastTime = timeStamp;\r\n      }\r\n\r\n      shouldPrevent( backwards ) && prevent( e );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks whether the component should prevent the default action of the wheel event or not.\r\n   *\r\n   * @param backwards - Set this to `true` for backwards direction.\r\n   *\r\n   * @return `true` if the action should be prevented.\r\n   */\r\n  function shouldPrevent( backwards: boolean ): boolean {\r\n    return ! options.releaseWheel\r\n      || Splide.state.is( MOVING )\r\n      || Components.Controller.getAdjacent( backwards ) !== -1;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n  };\r\n}\r\n","import { ARIA_LIVE, ARIA_RELEVANT } from '../../constants/attributes';\r\nimport { CLASS_SR } from '../../constants/classes';\r\nimport { EVENT_AUTOPLAY_PAUSE, EVENT_AUTOPLAY_PLAY, EVENT_MOVED, EVENT_SCROLLED } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { BaseComponent, Components, Options } from '../../types';\r\nimport { append, apply, create, remove, removeAttribute, setAttribute } from '../../utils';\r\n\r\n\r\n/**\r\n * The interface for the Live component.\r\n *\r\n * @since 4.0.0\r\n */\r\nexport interface LiveComponent extends BaseComponent {\r\n  disable( disabled: boolean ): void;\r\n}\r\n\r\n/**\r\n * The component for implementing Live Region to the slider.\r\n *\r\n * @link https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\r\n *\r\n * @since 4.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Live component object.\r\n */\r\nexport function Live( Splide: Splide, Components: Components, options: Options ): LiveComponent {\r\n  const { on } = EventInterface( Splide );\r\n  const { track } = Components.Elements;\r\n  const { live } = options;\r\n\r\n  /**\r\n   * Indicates whether the live region is enabled or not.\r\n   */\r\n  const enabled = live && ! options.isNavigation;\r\n\r\n  /**\r\n   * The span element for the SR only text.\r\n   */\r\n  const sr = create( 'span', CLASS_SR );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   * The `aria-relevant` attribute is important to prevent SR from reading contents twice.\r\n   */\r\n  function mount(): void {\r\n    if ( enabled ) {\r\n      disable( ! Components.Autoplay.isPaused() );\r\n      setAttribute( track, ARIA_RELEVANT, 'additions' );\r\n      sr.textContent = '…';\r\n\r\n      on( EVENT_AUTOPLAY_PLAY, apply( disable, true ) );\r\n      on( EVENT_AUTOPLAY_PAUSE, apply( disable, false ) );\r\n      on( [ EVENT_MOVED, EVENT_SCROLLED ], apply( append, track, sr ) );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the component.\r\n   */\r\n  function destroy(): void {\r\n    removeAttribute( track, [ ARIA_LIVE, ARIA_RELEVANT ] );\r\n    remove( sr );\r\n  }\r\n\r\n  /**\r\n   * Disables/enables the live region.\r\n   * Does nothing when the `live` option is not enabled.\r\n   *\r\n   * @param disabled - `true` to disable the live region or `false` to enable it again.\r\n   */\r\n  function disable( disabled: boolean ): void {\r\n    if ( enabled ) {\r\n      setAttribute( track, ARIA_LIVE, disabled ? 'off' : 'polite' );\r\n    }\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    disable,\r\n    destroy,\r\n  };\r\n}","import { Options } from '../types';\r\nimport { CLASSES } from './classes';\r\nimport { I18N } from './i18n';\r\n\r\n\r\n/**\r\n * The collection of default options.\r\n * Note that this collection does not contain all options.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const DEFAULTS: Options = {\r\n  type              : 'slide',\r\n  role              : 'region',\r\n  speed             : 400,\r\n  perPage           : 1,\r\n  cloneStatus       : true,\r\n  arrows            : true,\r\n  pagination        : true,\r\n  paginationKeyboard: true,\r\n  interval          : 5000,\r\n  pauseOnHover      : true,\r\n  pauseOnFocus      : true,\r\n  resetProgress     : true,\r\n  easing            : 'cubic-bezier(0.25, 1, 0.5, 1)',\r\n  drag              : true,\r\n  direction         : 'ltr',\r\n  trimSpace         : true,\r\n  focusableNodes    : 'a, button, textarea, input, select, iframe',\r\n  live              : true,\r\n  classes           : CLASSES,\r\n  i18n              : I18N,\r\n  reducedMotion: {\r\n    speed      : 0,\r\n    rewindSpeed: 0,\r\n    autoplay   : 'pause',\r\n  },\r\n};","/**\r\n * The collection of i18n strings.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport const I18N = {\r\n  prev      : 'Previous slide',\r\n  next      : 'Next slide',\r\n  first     : 'Go to first slide',\r\n  last      : 'Go to last slide',\r\n  slideX    : 'Go to slide %s',\r\n  pageX     : 'Go to page %s',\r\n  play      : 'Start autoplay',\r\n  pause     : 'Pause autoplay',\r\n  carousel  : 'carousel',\r\n  slide     : 'slide',\r\n  select    : 'Select a slide to show',\r\n  slideLabel: '%s of %s', // [ slide number ] / [ slide size ]\r\n};\r\n","import { EVENT_MOUNTED, EVENT_REFRESH } from '../../constants/events';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { nextTick, noop, rect, unit, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the fade transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Fade( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { on } = EventInterface( Splide );\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   * The nextTick disables the initial fade transition of the first slide.\r\n   */\r\n  function mount(): void {\r\n    on( [ EVENT_MOUNTED, EVENT_REFRESH ], () => {\r\n      nextTick( () => {\r\n        Components.Slides.style( 'transition', `opacity ${ options.speed }ms ${ options.easing }` );\r\n      } );\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   * Explicitly sets the track height to avoid it will collapse in Safari.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    const { track } = Components.Elements;\r\n    style( track, 'height', unit( rect( track ).height ) );\r\n\r\n    nextTick( () => {\r\n      done();\r\n      style( track, 'height', '' );\r\n    } );\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel: noop,\r\n  };\r\n}\r\n","import { SLIDE } from '../../constants/types';\r\nimport { EventInterface } from '../../constructors';\r\nimport { Splide } from '../../core/Splide/Splide';\r\nimport { Components, Options, TransitionComponent } from '../../types';\r\nimport { abs, apply, style } from '../../utils';\r\n\r\n\r\n/**\r\n * The component for the slide transition.\r\n *\r\n * @since 3.0.0\r\n *\r\n * @param Splide     - A Splide instance.\r\n * @param Components - A collection of components.\r\n * @param options    - Options.\r\n *\r\n * @return A Transition component object.\r\n */\r\nexport function Slide( Splide: Splide, Components: Components, options: Options ): TransitionComponent {\r\n  const { bind } = EventInterface( Splide );\r\n  const { Move, Controller, Scroll } = Components;\r\n  const { list } = Components.Elements;\r\n  const transition = apply( style, list, 'transition' );\r\n\r\n  /**\r\n   * Holds the `done` callback function.\r\n   */\r\n  let endCallback: () => void;\r\n\r\n  /**\r\n   * Called when the component is mounted.\r\n   */\r\n  function mount(): void {\r\n    bind( list, 'transitionend', e => {\r\n      if ( e.target === list && endCallback ) {\r\n        cancel();\r\n        endCallback();\r\n      }\r\n    } );\r\n  }\r\n\r\n  /**\r\n   * Starts the transition.\r\n   * The Move component calls this method just before the slider moves.\r\n   *\r\n   * @param index - A destination index.\r\n   * @param done  - The callback function that must be called after the transition ends.\r\n   */\r\n  function start( index: number, done: () => void ): void {\r\n    const destination = Move.toPosition( index, true );\r\n    const position    = Move.getPosition();\r\n    const speed       = getSpeed( index );\r\n\r\n    if ( abs( destination - position ) >= 1 && speed >= 1 ) {\r\n      if ( options.useScroll ) {\r\n        Scroll.scroll( destination, speed, false, done );\r\n      } else {\r\n        transition( `transform ${ speed }ms ${ options.easing }` );\r\n        Move.translate( destination, true );\r\n        endCallback = done;\r\n      }\r\n    } else {\r\n      Move.jump( index );\r\n      done();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancels the transition.\r\n   */\r\n  function cancel(): void {\r\n    transition( '' );\r\n    Scroll.cancel();\r\n  }\r\n\r\n  /**\r\n   * Returns the transition speed.\r\n   *\r\n   * @param index - A destination index.\r\n   */\r\n  function getSpeed( index: number ): number {\r\n    const { rewindSpeed } = options;\r\n\r\n    if ( Splide.is( SLIDE ) && rewindSpeed ) {\r\n      const prev = Controller.getIndex( true );\r\n      const end  = Controller.getEnd();\r\n\r\n      if ( ( prev === 0 && index >= end ) || ( prev >= end && index === 0 ) ) {\r\n        return rewindSpeed;\r\n      }\r\n    }\r\n\r\n    return options.speed;\r\n  }\r\n\r\n  return {\r\n    mount,\r\n    start,\r\n    cancel,\r\n  };\r\n}\r\n","import * as ComponentConstructors from '../../components';\r\nimport { SlideMatcher } from '../../components/Slides/Slides';\r\nimport { CLASS_INITIALIZED } from '../../constants/classes';\r\nimport { DEFAULTS } from '../../constants/defaults';\r\nimport { EVENT_DESTROY, EVENT_MOUNTED, EVENT_READY, EVENT_REFRESH } from '../../constants/events';\r\nimport { DATA_ATTRIBUTE } from '../../constants/project';\r\nimport { CREATED, DESTROYED, IDLE, STATES } from '../../constants/states';\r\nimport { FADE } from '../../constants/types';\r\nimport { EventInterface, EventInterfaceObject, State, StateObject } from '../../constructors';\r\nimport { Fade, Slide } from '../../transitions';\r\nimport { AnyFunction, ComponentConstructor, Components, EventMap, Options, SyncTarget } from '../../types';\r\nimport { addClass, assert, assign, empty, forOwn, getAttribute, isString, merge, query, slice } from '../../utils';\r\nimport { ARIA_LABEL, ARIA_LABELLEDBY } from \"../../constants/attributes\";\r\n\r\n\r\n/**\r\n * The frontend class for the Splide slider.\r\n *\r\n * @since 3.0.0\r\n */\r\nexport class Splide {\r\n  /**\r\n   * Changes the default options for all Splide instances.\r\n   */\r\n  static defaults: Options = {};\r\n\r\n  /**\r\n   * The collection of state numbers.\r\n   */\r\n  static readonly STATES = STATES;\r\n\r\n  /**\r\n   * The root element where the Splide is applied.\r\n   */\r\n  readonly root: HTMLElement;\r\n\r\n  /**\r\n   * The EventBusObject object.\r\n   */\r\n  readonly event: EventInterfaceObject = EventInterface();\r\n\r\n  /**\r\n   * The collection of all component objects.\r\n   */\r\n  readonly Components: Components = {} as Components;\r\n\r\n  /**\r\n   * The StateObject object.\r\n   */\r\n  readonly state: StateObject = State( CREATED );\r\n\r\n  /**\r\n   * An array with SyncTarget objects for splide instances to sync with.\r\n   */\r\n  readonly splides: SyncTarget[] = [];\r\n\r\n  /**\r\n   * The current options.\r\n   */\r\n  private readonly _o: Options = {};\r\n\r\n  /**\r\n   * The collection of all components.\r\n   */\r\n  private _C: Components;\r\n\r\n  /**\r\n   * The collection of extensions.\r\n   */\r\n  private _E: Record<string, ComponentConstructor> = {};\r\n\r\n  /**\r\n   * The Transition component.\r\n   */\r\n  private _T: ComponentConstructor;\r\n\r\n  /**\r\n   * The Splide constructor.\r\n   *\r\n   * @param target  - The selector for the target element, or the element itself.\r\n   * @param options - Optional. An object with options.\r\n   */\r\n  constructor( target: string | HTMLElement, options?: Options ) {\r\n    const root = isString( target ) ? query<HTMLElement>( document, target ) : target;\r\n    assert( root, `${ root } is invalid.` );\r\n\r\n    this.root = root;\r\n\r\n    options = merge( {\r\n      label     : getAttribute( root, ARIA_LABEL ) || '',\r\n      labelledby: getAttribute( root, ARIA_LABELLEDBY ) || '',\r\n    }, DEFAULTS, Splide.defaults, options || {} );\r\n\r\n    try {\r\n      merge( options, JSON.parse( getAttribute( root, DATA_ATTRIBUTE ) ) );\r\n    } catch ( e ) {\r\n      assert( false, 'Invalid JSON' );\r\n    }\r\n\r\n    this._o = Object.create( merge( {}, options ) );\r\n  }\r\n\r\n  /**\r\n   * Initializes the instance.\r\n   *\r\n   * @param Extensions - Optional. An object with extensions.\r\n   * @param Transition - Optional. A Transition component.\r\n   *\r\n   * @return `this`\r\n   */\r\n  mount( Extensions?: Record<string, ComponentConstructor>, Transition?: ComponentConstructor ): this {\r\n    const { state, Components } = this;\r\n    assert( state.is( [ CREATED, DESTROYED ] ), 'Already mounted!' );\r\n\r\n    state.set( CREATED );\r\n\r\n    this._C = Components;\r\n    this._T = Transition || this._T || ( this.is( FADE ) ? Fade : Slide );\r\n    this._E = Extensions || this._E;\r\n\r\n    const Constructors = assign( {}, ComponentConstructors, this._E, { Transition: this._T } );\r\n\r\n    forOwn( Constructors, ( Component, key ) => {\r\n      const component = Component( this, Components, this._o );\r\n      Components[ key ] = component;\r\n      component.setup && component.setup();\r\n    } );\r\n\r\n    forOwn( Components, component => {\r\n      component.mount && component.mount();\r\n    } );\r\n\r\n    this.emit( EVENT_MOUNTED );\r\n\r\n    addClass( this.root, CLASS_INITIALIZED );\r\n\r\n    state.set( IDLE );\r\n    this.emit( EVENT_READY );\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Syncs the slider with the provided one.\r\n   * This method must be called before the `mount()`.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var primary   = new Splide();\r\n   * var secondary = new Splide();\r\n   *\r\n   * primary.sync( secondary );\r\n   * primary.mount();\r\n   * secondary.mount();\r\n   * ```\r\n   *\r\n   * @param splide - A Splide instance to sync with.\r\n   *\r\n   * @return `this`\r\n   */\r\n  sync( splide: Splide ): this {\r\n    this.splides.push( { splide } );\r\n    splide.splides.push( { splide: this, isParent: true } );\r\n\r\n    if ( this.state.is( IDLE ) ) {\r\n      this._C.Sync.remount();\r\n      splide.Components.Sync.remount();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Moves the slider with the following control pattern.\r\n   *\r\n   * | Pattern | Description |\r\n   * |---|---|\r\n   * | `i` | Goes to the slide `i` |\r\n   * | `'+${i}'` | Increments the slide index by `i` |\r\n   * | `'-${i}'` | Decrements the slide index by `i` |\r\n   * | `'>'` | Goes to the next page |\r\n   * | `'<'` | Goes to the previous page |\r\n   * | `>${i}` | Goes to the page `i` |\r\n   *\r\n   * In most cases, `'>'` and `'<'` notations are enough to control the slider\r\n   * because they respect `perPage` and `perMove` options.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Goes to the slide 1:\r\n   * splide.go( 1 );\r\n   *\r\n   * // Increments the index:\r\n   * splide.go( '+2' );\r\n   *\r\n   * // Goes to the next page:\r\n   * splide.go( '>' );\r\n   *\r\n   * // Goes to the page 2:\r\n   * splide.go( '>2' );\r\n   * ```\r\n   *\r\n   * @param control - A control pattern.\r\n   *\r\n   * @return `this`\r\n   */\r\n  go( control: number | string ): this {\r\n    this._C.Controller.go( control );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Registers an event handler.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Listens to a single event:\r\n   * splide.on( 'move', function() {} );\r\n   *\r\n   * // Listens to multiple events:\r\n   * splide.on( 'move resize', function() {} );\r\n   *\r\n   * // Appends a namespace:\r\n   * splide.on( 'move.myNamespace resize.myNamespace', function() {} );\r\n   * ```\r\n   *\r\n   * @param events   - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   * @param callback - A callback function.\r\n   *\r\n   * @return `this`\r\n   */\r\n  on<K extends keyof EventMap>( events: K, callback: EventMap[ K ] ): this;\r\n  on( events: string | string[], callback: AnyFunction ): this;\r\n  on( events: string | string[], callback: AnyFunction ): this {\r\n    this.event.on( events, callback );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes the registered all handlers for the specified event or events.\r\n   * If you want to only remove a particular handler, use namespace to identify it.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   *\r\n   * // Removes all handlers assigned to \"move\":\r\n   * splide.off( 'move' );\r\n   *\r\n   * // Only removes handlers that belong to the specified namespace:\r\n   * splide.off( 'move.myNamespace' );\r\n   * ```\r\n   *\r\n   * @param events - An event name or names separated by spaces. Use a dot(.) to append a namespace.\r\n   *\r\n   * @return `this`\r\n   */\r\n  off<K extends keyof EventMap>( events: K | K[] | string | string[] ): this {\r\n    this.event.off( events );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Emits an event and triggers registered handlers.\r\n   *\r\n   * @param event - An event name to emit.\r\n   * @param args  - Optional. Any number of arguments to pass to handlers.\r\n   *\r\n   * @return `this`\r\n   */\r\n  emit<K extends keyof EventMap>( event: K, ...args: Parameters<EventMap[ K ]> ): this;\r\n  emit( event: string, ...args: any[] ): this;\r\n  emit( event: string ): this {\r\n    // eslint-disable-next-line prefer-rest-params, prefer-spread\r\n    this.event.emit( event, ...slice( arguments, 1 ) );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Inserts a slide at the specified position.\r\n   *\r\n   * @example\r\n   * ```ts\r\n   * var splide = new Splide();\r\n   * splide.mount();\r\n   *\r\n   * // Adds the slide by the HTML:\r\n   * splide.add( '<li></li> );\r\n   *\r\n   * // or adds the element:\r\n   * splide.add( document.createElement( 'li' ) );\r\n   * ```\r\n   *\r\n   * @param slides - A slide element, an HTML string that represents a slide, or an array with them.\r\n   * @param index  - Optional. An index to insert a slide at.\r\n   *\r\n   * @return `this`\r\n   */\r\n  add( slides: string | HTMLElement | Array<string | HTMLElement>, index?: number ): this {\r\n    this._C.Slides.add( slides, index );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes slides that match the matcher\r\n   * that can be an index, an array with indices, a selector, or an iteratee function.\r\n   *\r\n   * @param matcher - An index, an array with indices, a selector string, or an iteratee function.\r\n   */\r\n  remove( matcher: SlideMatcher ): this {\r\n    this._C.Slides.remove( matcher );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Checks the slider type.\r\n   *\r\n   * @param type - A type to test.\r\n   *\r\n   * @return `true` if the type matches the current one, or otherwise `false`.\r\n   */\r\n  is( type: string ): boolean {\r\n    return this._o.type === type;\r\n  }\r\n\r\n  /**\r\n   * Refreshes the slider.\r\n   *\r\n   * @return `this`\r\n   */\r\n  refresh(): this {\r\n    this.emit( EVENT_REFRESH );\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Destroys the slider.\r\n   *\r\n   * @param completely - Optional. If `true`, Splide will not remount the slider by breakpoints.\r\n   *\r\n   * @return `this`\r\n   */\r\n  destroy( completely = true ): this {\r\n    const { event, state } = this;\r\n\r\n    if ( state.is( CREATED ) ) {\r\n      // Postpones destruction requested before the slider becomes ready.\r\n      EventInterface( this ).on( EVENT_READY, this.destroy.bind( this, completely ) );\r\n    } else {\r\n      forOwn( this._C, component => {\r\n        component.destroy && component.destroy( completely );\r\n      }, true );\r\n\r\n      event.emit( EVENT_DESTROY );\r\n      event.destroy();\r\n      completely && empty( this.splides );\r\n      state.set( DESTROYED );\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns options.\r\n   *\r\n   * @return An object with the latest options.\r\n   */\r\n  get options(): Options {\r\n    return this._o;\r\n  }\r\n\r\n  /**\r\n   * Merges options to the current options and emits `updated` event.\r\n   *\r\n   * @param options - An object with new options.\r\n   */\r\n  set options( options: Options ) {\r\n    this._C.Media.set( options, true );\r\n  }\r\n\r\n  /**\r\n   * Returns the number of slides without clones.\r\n   *\r\n   * @return The number of slides.\r\n   */\r\n  get length(): number {\r\n    return this._C.Slides.getLength( true );\r\n  }\r\n\r\n  /**\r\n   * Returns the active slide index.\r\n   *\r\n   * @return The active slide index.\r\n   */\r\n  get index(): number {\r\n    return this._C.Controller.getIndex();\r\n  }\r\n}\r\n"]}